openapi: "3.0.2"
info:
  title: "MARLIN PROJECT API"
  version: "2.5"
servers:
- url: "http://marlin.pdev.vsk.ru/api"

paths:
  /ping:
    get:
      tags:
      - View
      summary: "Get Components and Software"
      operationId: GetComponentsAndSoftware
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/component'
        '401':
          description: Unauthorized
          content:
            application/json::
              schema:
                title: Unauthorized
                type: string
                example: Unauthorized
          
        '403':
          description: Forbidden
          content:
            application/json::
              schema:
                title: Forbidden
                type: string
                example: Forbidden
        "404":
          description: Not found response
          content:
            application/json::
              schema:
                title: Components and Software not found
                type: string
                example: Not found
  /service_kinds:
    get:
      tags:
      - ServiceKinds
      summary: "Get Service Kinds"
      operationId: GetServiceKinds
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/serviceKinds'
        '401':
          description: Unauthorized
          content:
            application/json::
              schema:
                title: Unauthorized
                type: string
                example: Unauthorized
          
        '403':
          description: Forbidden
          content:
            application/json::
              schema:
                title: Forbidden
                type: string
                example: Forbidden
        "404":
          description: Not found response
          content:
            application/json::
              schema:
                title: Service Kinds not found
                type: string
                example: Not found
  /accelerator_packs:
    get:
      tags:
      - AcceleratorPacks
      summary: "Get Accelerator Packs by Service Kind"
      operationId: GetAcceleratorPacksByServiceKind
      parameters:
        - in: query
          name: filter
          style: deepObject
          schema:
            type: object
            properties:
              service_kind:
                type: string
                enum:
                  - kafka
                  - mono
                  - front
                  - backend
                  - mock
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/per'
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/acceleratorPacks'
                  meta:
                    $ref: '#/components/schemas/meta'
                      
        '401':
          description: Unauthorized
          content:
            application/json::
              schema:
                title: Unauthorized
                type: string
                example: Unauthorized
          
        '403':
          description: Forbidden
          content:
            application/json::
              schema:
                title: Forbidden
                type: string
                example: Forbidden
        "404":
          description: Not found response
          content:
            application/json::
              schema:
                title: Accelerator Packs not found
                type: string
                example: Not found    
  /projects:
    get:
      tags:
      - Projects
      summary: "Get List Projects"
      operationId: GetListProjects
      parameters:
        - in: query
          name: filter
          style: deepObject
          schema:
            type: object
            properties:
              show:
                type: string
                default: all
        - in: query
          name: sort
          schema:
            type: string
            enum:
              - projects.created_at
              - name
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/per'
      
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/project'
                  meta:
                    $ref: '#/components/schemas/meta'
        '401':
          description: Unauthorized
          content:
            application/json::
              schema:
                title: Unauthorized
                type: string
                example: Unauthorized
          
        '403':
          description: Forbidden
          content:
            application/json::
              schema:
                title: Forbidden
                type: string
                example: Forbidden
        "404":
          description: Not found response
          content:
            application/json::
              schema:
                title: Projects not found
                type: string
                example: Not found
    post:
      tags:
      - Projects
      summary: "Add a new project"
      operationId: AddProject
      requestBody:
        required: true
        content:
          application/json:
            schema:
              title: data
              type: object
              properties:
                attributes:
                  type: object
                  properties:
                    businessOwner: 
                      type: string
                      example: FisrtOwner
                    code:
                      type: string
                      example: test_app_1
                    description:
                      type: string
                    jiraCmdb:
                      type: string
                    kind:
                      type: string
                      example: "marlin"
                    name:
                      type: string
                      example: "Test App 1"
                relationships:
                  type: object
                  properties:
                    incomingSubscriptions:
                      type: object
                      properties:
                        data:
                          type: array
                          items:
                            $ref: '#/components/schemas/relationship'
                    integrations:
                      type: object
                      properties:
                        data:
                          type: array
                          items:
                            $ref: '#/components/schemas/relationship'
                    outgoingSubscriptions:    
                      type: object
                      properties:
                        data:
                          type: array
                          items:
                            $ref: '#/components/schemas/relationship'
                    paasSubscriptions:
                      type: object
                      properties:
                        data:
                          type: array
                          items:
                            $ref: '#/components/schemas/relationship'    
                    services:
                      type: object
                      properties:
                        data:
                          type: array
                          items:
                            $ref: '#/components/schemas/relationship'
                type:
                  type: string
                  example: project
              
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/project'
        '401':
          description: Unauthorized
          content:
            application/json::
              schema:
                title: Unauthorized
                type: string
                example: Unauthorized
          
        '403':
          description: Forbidden
          content:
            application/json::
              schema:
                title: Forbidden
                type: string
                example: Forbidden
        "404":
          description: Not found response
          content:
            application/json::
              schema:
                title: Projects not found
                type: string
                example: Not found
  
  /projects/:
    get:
      tags:
      - Projects
      summary: "Get Project Details"
      operationId: GetProjectDetails
      parameters:
        - in: path 
          name: project_id
          required: true
          schema:
            type: string
            format: uuid
            example: eff26064-4117-4d84-bbba-3b3c89fd2bb2
        - in: query
          name: include
          schema:
            type: string
            example: members,incoming_subscription.initiator.kind,outgoing_subscriptions.initiator.kind,incoming_subscriptions.receiver.kind,outgoing_subscriptions.receiver.kind,paas_subscriptions.platform_service,paas_subscriptions.service
      
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/project'
                  included:
                    type: array
                    items:
                      anyOf:
                      - $ref: '#/components/schemas/members'
                      - $ref: '#/components/schemas/paasSubscriptions'
                      - $ref: '#/components/schemas/services'
                      - $ref: '#/components/schemas/platformServices'
        '401':
          description: Unauthorized
          content:
            application/json::
              schema:
                title: Unauthorized
                type: string
                example: Unauthorized
          
        '403':
          description: Forbidden
          content:
            application/json::
              schema:
                title: Forbidden
                type: string
                example: Forbidden
        "404":
          description: Not found response
          content:
            application/json::
              schema:
                title: Projects not found
                type: string
                example: Not found
    patch:
      tags:
      - Projects
      summary: "Edit project"
      operationId: EditProject
      parameters:
        - in: path 
          name: project_id
          required: true
          schema:
            type: string
            format: uuid
            example: eff26064-4117-4d84-bbba-3b3c89fd2bb2
      requestBody:
        required: true
        content:
          application/json:
            schema:
              title: data
              type: object
              properties:
                attributes:
                  type: object
                  properties:
                    description:
                      type: string
                    jiraCmdb:
                      type: string
                    name:
                      type: string
                      example: "Test App 1"
                id:
                  type: string
                  format: uuid
                  description: project GUID 
                  example: d2c16267-ebe2-4976-b018-7deae8295741      
                type:
                  type: string
                  example: project
              
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/project'
        '401':
          description: Unauthorized
          content:
            application/json::
              schema:
                title: Unauthorized
                type: string
                example: Unauthorized
          
        '403':
          description: Forbidden
          content:
            application/json::
              schema:
                title: Forbidden
                type: string
                example: Forbidden
        "404":
          description: Not found response
          content:
            application/json::
              schema:
                title: Projects not found
                type: string
                example: Not found
    delete:
      tags:
      - Projects
      summary: "Delete project"
      operationId: DeleteProject
      parameters:
        - in: path 
          name: project_id
          required: true
          schema:
            type: string
            format: uuid
            example: eff26064-4117-4d84-bbba-3b3c89fd2bb2
      responses:
        "200":
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/project'
        '401':
          description: Unauthorized
          content:
            application/json::
              schema:
                title: Unauthorized
                type: string
                example: Unauthorized
          
        '403':
          description: Forbidden
          content:
            application/json::
              schema:
                title: Forbidden
                type: string
                example: Forbidden
        "404":
          description: Not found response
          content:
            application/json::
              schema:
                title: Projects not found
                type: string
                example: Not found
  /projects/{project_id}/services: 
    get:
      tags:
      - Projects
      summary: "Get Services by project Id"
      operationId: GetSrvcByProjectId
      parameters:
        - in: path 
          name: project_id
          required: true
          schema:
            type: string
            format: uuid
            example: eff26064-4117-4d84-bbba-3b3c89fd2bb2
        - in: query
          name: sort
          schema:
            type: string
            enum:
              - name 
        - in: query
          name: include
          schema:
            type: string
            example: kind, accelerator_pack
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/per'
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/services'
                  included:
                    type: array
                    items:
                      anyOf:
                      - $ref: '#/components/schemas/acceleratorPacks'
                      - $ref: '#/components/schemas/serviceKinds'
                  meta:
                    $ref: '#/components/schemas/meta'
        '401':
          description: Unauthorized
          content:
            application/json::
              schema:
                title: Unauthorized
                type: string
                example: Unauthorized
          
        '403':
          description: Forbidden
          content:
            application/json::
              schema:
                title: Forbidden
                type: string
                example: Forbidden
        "404":
          description: Not found response
          content:
            application/json::
              schema:
                title: Services not found
                type: string
                example: Not found   
    post:
      tags:
      - Projects
      summary: "Add a new service for project"
      operationId: AddNewServiceForProject
      parameters:
        - in: path 
          name: project_id
          required: true
          schema:
            type: string
            format: uuid
            example: eff26064-4117-4d84-bbba-3b3c89fd2bb2
      requestBody:
        required: true
        content:
          application/json:
            schema:
              title: data
              type: object
              properties:
                attributes:
                  type: object
                  properties:
                    acceleratorPackId: 
                      type: string
                      example: e7b89d58-b604-43f0-9133-aebc54544a1f
                    code:
                      type: string
                      example: test_service
                    description:
                      type: string
                    kind_id:
                      type: string
                      example: 24b633b3-1745-4670-bd54-4e3c3aaafd35
                    name:
                      type: string
                      example: "Test service"
                    release_date:
                      type: string
                      pattern: yyyy-MM-dd'T'HH:mm:ss.SSSZ
                      example: 2022-04-06T09:31:07.551Z
                type:
                  type: string
                  default: services
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/services'
        '401':
          description: Unauthorized
          content:
            application/json::
              schema:
                title: Unauthorized
                type: string
                example: Unauthorized
          
        '403':
          description: Forbidden
          content:
            application/json::
              schema:
                title: Forbidden
                type: string
                example: Forbidden
        "404":
          description: Not found response
          content:
            application/json::
              schema:
                title: Service not created
                type: string
                example: Not found 
  /projects/{project_id}/integrations: 
    get:
      tags:
      - Projects
      summary: "Get Integrations by project Id"
      operationId: GetIntegarionsByProjectId
      parameters:
        - in: path 
          name: project_id
          required: true
          schema:
            type: string
            format: uuid
            example: eff26064-4117-4d84-bbba-3b3c89fd2bb2
        - in: query
          name: include
          schema:
            type: string
            example: processing_errors,environment
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/integrations'
                  included:
                    type: array
                    items:
                      anyOf:
                      - $ref: '#/components/schemas/environments'
                      - $ref: '#/components/schemas/processingErrors'
                  meta:
                    $ref: '#/components/schemas/meta'
        '401':
          description: Unauthorized
          content:
            application/json::
              schema:
                title: Unauthorized
                type: string
                example: Unauthorized
          
        '403':
          description: Forbidden
          content:
            application/json::
              schema:
                title: Forbidden
                type: string
                example: Forbidden
        "404":
          description: Not found response
          content:
            application/json::
              schema:
                title: Integrations not found
                type: string
                example: Not found
  /projects/{project_id}/active_deployments:
    get:
      tags:
      - Projects
      summary:  "Get Active Deployments by project Id"
      operationId: GetActiveDeploymentsByProjectId
      parameters:
        - in: path 
          name: project_id
          required: true
          schema:
            type: string
            format: uuid
            example: eff26064-4117-4d84-bbba-3b3c89fd2bb2
        - in: query
          name: filter
          style: deepObject
          schema:
            type: object
            properties:
              q:
                type: string
              enviroment_id:
                type: string
                format: uuid
        - in: query
          name: include
          schema:
            type: string
            example: environment,template.addresses,service
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/per'
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/deployments'
                  included:
                    type: array
                    items:
                      anyOf:
                      - $ref: '#/components/schemas/services'
                      - $ref: '#/components/schemas/environments'
                      - $ref: '#/components/schemas/templates'
                      - $ref: '#/components/schemas/templateAddresses'
                  meta:
                    $ref: '#/components/schemas/meta'
        '401':
          description: Unauthorized
          content:
            application/json::
              schema:
                title: Unauthorized
                type: string
                example: Unauthorized
          
        '403':
          description: Forbidden
          content:
            application/json::
              schema:
                title: Forbidden
                type: string
                example: Forbidden
        "404":
          description: Not found response
          content:
            application/json::
              schema:
                title: Deployments not found
                type: string
                example: Not found
    
  /projects/{project_id}/members:
    get:
      tags:
      - Members
      summary: "Get Members"
      operationId: GetMembers
      parameters:
        - in: path 
          name: project_id
          required: true
          schema:
            type: string
            format: uuid
            example: eff26064-4117-4d84-bbba-3b3c89fd2bb2
        - in: query
          name: sort
          schema:
            type: string
            enum:
              - full_name
        - in: query
          name: include
          schema:
            type: string
            example: user, integrations
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/per'
        
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/members'
                  included:
                    type: array
                    items:
                      anyOf:
                      - $ref: '#/components/schemas/users'
                      - $ref: '#/components/schemas/integrations'
                  meta:
                    $ref: '#/components/schemas/meta'
        '401':
          description: Unauthorized
          content:
            application/json::
              schema:
                title: Unauthorized
                type: string
                example: Unauthorized
          
        '403':
          description: Forbidden
          content:
            application/json::
              schema:
                title: Forbidden
                type: string
                example: Forbidden
        "404":
          description: Not found response
          content:
            application/json::
              schema:
                title: Members not found
                type: string
                example: Not found   
                
    post:
      tags:
      - Members
      summary: "Add Members"
      operationId: AddMembers
      parameters:
        - in: path 
          name: project_id
          required: true
          schema:
            type: string
            format: uuid
            example: eff26064-4117-4d84-bbba-3b3c89fd2bb2
      requestBody:
        required: true
        content:
          application/json:
            schema:
              title: data
              type: object
              properties:
                attributes:
                  type: object
                  properties:
                    userId:
                      type: string
                      example: 22
                relationships:
                  type: object
                  properties:
                    integrations:
                      type: object
                      properties:
                        data:
                          type: array
                          items:
                            $ref: '#/components/schemas/relationship'
                type:
                  type: string
                  default: members
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/members'
                  
  /members/{member_id}:                
    delete:
      tags:
      - Members
      summary: "Delete Members"
      operationId: DeleteMembers
      parameters:
        - in: path 
          name: member_id
          required: true
          schema:
            type: string
            format: uuid
            example: 022f2245-f2f5-4563-b8a5-5bb08a40fe85
      responses:
        "200":
          description: Deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/members'
        '401':
          description: Unauthorized
          content:
            application/json::
              schema:
                title: Unauthorized
                type: string
                example: Unauthorized
          
        '403':
          description: Forbidden
          content:
            application/json::
              schema:
                title: Forbidden
                type: string
                example: Forbidden
        "404":
          description: Not found response
          content:
            application/json::
              schema:
                title: Members not found
                type: string
                example: Not found       
                
  /platform_services:
    get:
      tags:
      - PlatformServices
      summary: "Get List Platform Services"
      operationId: GetListPlatformServices
      parameters:
        - in: query
          name: filter
          style: deepObject
          schema:
            type: object
            properties:
              system_component_id:
                type: string
                format: uuid
                example: 0511c005-da23-4314-b643-f93a0d9c3efe
        - in: query
          name: sort
          schema:
            type: string
            enum:
              - platform_services.created_at
              - name
        - in: query
          name: include
          schema:
            type: string
            default: system_component
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/per'
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                title: data
                type: object
                properties:
                  data:
                    type: array
                    items:
                        $ref: '#/components/schemas/platformServices'
                  included:
                    type: array
                    items:
                      $ref: '#/components/schemas/systemComponents'
                  meta:
                    $ref: '#/components/schemas/meta'
        '401':
          description: Unauthorized
          content:
            application/json::
              schema:
                title: Unauthorized
                type: string
                example: Unauthorized
          
        '403':
          description: Forbidden
          content:
            application/json::
              schema:
                title: Forbidden
                type: string
                example: Forbidden
        "404":
          description: Not found response
          content:
            application/json::
              schema:
                title: Platform Services not found
                type: string
                example: Not found       
        
    post:
      tags:
      - PlatformServices
      summary: "Add Platform Service"
      operationId: AddPlatformService
      requestBody:
        required: true
        content:
          application/json:
            schema:
              title: data
              type: object
              properties:
                attributes:
                  type: object
                  properties:
                    code:
                      type: string
                      example: minio
                    description:
                      type: string
                    name:
                      type: string
                      example: MinIO
                    runtime:
                      type: boolean
                    system_component_exemplar_ids:
                      type: array
                      items:
                          type: string
                          example: 992ef17f-5bfe-445e-94d5-b8b4edc3f4ef
                    sysytem_component_id:
                      type: string
                      example: 992ef17f-5bfe-445e-94d5-b8b4edc3f4ef
                type:
                  type: string
                  default: platformServices     
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/platformServices'
        '401':
          description: Unauthorized
          content:
            application/json::
              schema:
                title: Unauthorized
                type: string
                example: Unauthorized
          
        '403':
          description: Forbidden
          content:
            application/json::
              schema:
                title: Forbidden
                type: string
                example: Forbidden
        "404":
          description: Not found response
          content:
            application/json::
              schema:
                title: Platforn Service not 
                type: string
                example: Not found
  /platform_services/{platform_service_id}:
    get:
      tags:
      - PlatformServices
      summary: "Get Platform Service Details"
      operationId: GetPlarformServiceDetails
      parameters:
        - in: path 
          name: platform_service_id
          required: true
          schema:
            type: string
            format: uuid
            example: eff26064-4117-4d84-bbba-3b3c89fd2bb2
        - in: query
          name: include
          schema:
            type: string
            default: system_component,system_component_exemplars.environment
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                title: data
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/platformServices'
                  included:
                    type: array
                    items:
                      anyOf:
                        - $ref: '#/components/schemas/systemComponents'
                        - $ref: '#/components/schemas/systemComponentsExemplars'
                        - $ref: '#/components/schemas/environments'
        '401':
          description: Unauthorized
          content:
            application/json::
              schema:
                title: Unauthorized
                type: string
                example: Unauthorized
          
        '403':
          description: Forbidden
          content:
            application/json::
              schema:
                title: Forbidden
                type: string
                example: Forbidden
        "404":
          description: Not found response
          content:
            application/json::
              schema:
                title: Platform Services not found
                type: string
                example: Not found 
    patch:
      tags:
      - PlatformServices
      summary: "Edit Platform Service"
      operationId: EditPlatformService
      parameters:
        - in: path 
          name: platform_service_id
          required: true
          schema:
            type: string
            format: uuid
            example: eff26064-4117-4d84-bbba-3b3c89fd2bb2
      requestBody:
        required: true
        content:
          application/json:
            schema:
              title: data
              type: object
              properties:
                attributes:
                  type: object
                  properties:
                    description:
                      type: string
                    name:
                      type: string
                      example: "Test App 1"
                    system_component_exemplar_ids:
                      type: array
                      items:
                          type: string
                          example: 992ef17f-5bfe-445e-94d5-b8b4edc3f4ef
                id:
                  type: string
                  format: uuid
                  description: project GUID 
                  example: d2c16267-ebe2-4976-b018-7deae8295741      
                type:
                  type: string
                  example: platfromServices
              
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/platformServices'
        '401':
          description: Unauthorized
          content:
            application/json::
              schema:
                title: Unauthorized
                type: string
                example: Unauthorized
          
        '403':
          description: Forbidden
          content:
            application/json::
              schema:
                title: Forbidden
                type: string
                example: Forbidden
        "404":
          description: Not found response
          content:
            application/json::
              schema:
                title: Platform Service not found
                type: string
                example: Not found
    delete:
      tags:
      - PlatformServices
      summary: "Delete Platform Service"
      operationId: DeletePlatformService
      parameters:
        - in: path 
          name: platform_service_id
          required: true
          schema:
            type: string
            format: uuid
            example: 022f2245-f2f5-4563-b8a5-5bb08a40fe85
      responses:
        "200":
          description: Deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/platformServices'
        '401':
          description: Unauthorized
          content:
            application/json::
              schema:
                title: Unauthorized
                type: string
                example: Unauthorized
          
        '403':
          description: Forbidden
          content:
            application/json::
              schema:
                title: Forbidden
                type: string
                example: Forbidden
        "404":
          description: Not found response
          content:
            application/json::
              schema:
                title: Members not found
                type: string
                example: Not found   
  /platform_services/{platform_service_id}/paas_subsciptions:
    get:  
      tags:
      - PlatformServices
      summary: "Get Platform Services Paas Subsciptions"
      operationId: GetPlatformSrvsPaasSubsciptions"
      parameters:
        - in: path 
          name: platform_service_id
          required: true
          schema:
            type: string
            format: uuid
            example: eff26064-4117-4d84-bbba-3b3c89fd2bb2
        - in: query
          name: filter
          style: deepObject
          schema:
            type: object
            properties:
              q:
                type: string
                format: uuid
                example: TestPaaS
        - in: query
          name: sort
          schema:
            type: string
            enum:
              - projects
              - services
              - created_at
        - in: query
          name: include
          schema:
            type: string
            default: deployments.accounts,deployments.environment,service.project
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/per'
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                title: data
                type: object
                properties:
                  data:
                    type: array
                    items:
                        $ref: '#/components/schemas/paasSubscriptions'
                  included:
                    type: array
                    items:
                      anyOf:
                        - $ref: '#/components/schemas/services'
                        - $ref: '#/components/schemas/project'
                        - $ref: '#/components/schemas/platformServiceDeployments'
        '401':
          description: Unauthorized
          content:
            application/json::
              schema:
                title: Unauthorized
                type: string
                example: Unauthorized
          
        '403':
          description: Forbidden
          content:
            application/json::
              schema:
                title: Forbidden
                type: string
                example: Forbidden
        "404":
          description: Not found response
          content:
            application/json::
              schema:
                title: Platform Service not found
                type: string
                example: Not found
                
  /platform_services/{platform_service_id}/integrations:
    get:  
      tags:
      - PlatformServices
      summary: "Get Platform Services Integrations"
      operationId: GetPlatformSrvsIntegrations"
      parameters:
        - in: path 
          name: platform_service_id
          required: true
          schema:
            type: string
            format: uuid
            example: eff26064-4117-4d84-bbba-3b3c89fd2bb2
        - in: query
          name: include
          schema:
            type: string
            default: processing_errors,environment
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                title: data
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/integrations'
                  included:
                    type: array
                    items:
                      anyOf:
                        - $ref: '#/components/schemas/processingErrors'
                        - $ref: '#/components/schemas/environments'
        '401':
          description: Unauthorized
          content:
            application/json::
              schema:
                title: Unauthorized
                type: string
                example: Unauthorized
          
        '403':
          description: Forbidden
          content:
            application/json::
              schema:
                title: Forbidden
                type: string
                example: Forbidden
        "404":
          description: Not found response
          content:
            application/json::
              schema:
                title: Platform Service not found
                type: string
                example: Not found
  /services:
    get:
      tags:
      - Services
      summary: "Get List Services"
      operationId: GetListServices
      parameters:
        - in: query
          name: filter
          style: deepObject
          schema:
            type: object
            properties:
              show:
                type: string
                default: all
              kind_id:
                type: string
        - in: query
          name: sort
          schema:
            type: string
            enum:
              - service_name,project
              - service.created_at
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/per'
            
      
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/services'
                  included:
                    type: array
                    items:
                      oneOf:
                      - $ref: '#/components/schemas/project'
                      - $ref: '#/components/schemas/serviceKinds'
                      - $ref: '#/components/schemas/acceleratorPacks'
                  meta:
                    $ref: '#/components/schemas/meta'
        '401':
          description: Unauthorized
          content:
            application/json::
              schema:
                title: Unauthorized
                type: string
                example: Unauthorized
          
        '403':
          description: Forbidden
          content:
            application/json::
              schema:
                title: Forbidden
                type: string
                example: Forbidden
        "404":
          description: Not found response
          content:
            application/json::
              schema:
                title: Services not found
                type: string
                example: Not found

  /services/{service_id}:
    get:
      tags:
      - Services
      summary: "Get Service Details"
      operationId: GetServiceDetails
      parameters:
        - in: path 
          name: service_id
          required: true
          schema:
            type: string
            format: uuid
            example: eff26064-4117-4d84-bbba-3b3c89fd2bb2
        - in: query
          name: include
          schema:
            type: string
            enum:
              - project,incoming_subscriptions.initiator
              - kind.pipeline_validations
              - accelerator_pack
              - processing_errors
              - mocked_service
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/services'
                  included:
                    anyOf:
                    -  $ref: '#/components/schemas/project'
                    -  $ref: '#/components/schemas/serviceKinds'
                    -  $ref: '#/components/schemas/acceleratorPacks'
                    -  $ref: '#/components/schemas/pipelineValidations'
        '401':
          description: Unauthorized
          content:
            application/json::
              schema:
                title: Unauthorized
                type: string
                example: Unauthorized
          
        '403':
          description: Forbidden
          content:
            application/json::
              schema:
                title: Forbidden
                type: string
                example: Forbidden
        "404":
          description: Not found response
          content:
            application/json::
              schema:
                title: Services not found
                type: string
                example: Not found

    patch:
      tags:
      - Services
      summary: "Edit service"
      operationId: EditService
      parameters:
        - in: path 
          name: service_id
          required: true
          schema:
            type: string
            format: uuid
            example: eff26064-4117-4d84-bbba-3b3c89fd2bb2
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    attributes:
                      type: object
                      properties:
                        description:
                          type: string
                        jiraCmdb:
                          type: string
                        name:
                          type: string
                        release_date:
                          type: string
                          pattern: yyyy-MM-dd'T'HH:mm:ss.SSSZ
                          example: 2022-04-06T09:31:07.551Z
                    id:
                      type: string
                    type:
                      type: string
                      default: services
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/services'

    delete:
      tags:
      - Services
      summary: "Delete service"
      operationId: DeleteService
      parameters:
        - in: path 
          name: service_id
          required: true
          schema:
            type: string
            format: uuid
            example: 150b32dd-17b0-41b0-a025-37a947301bfc
      responses:
        "200":
          description: Deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/services'
        '401':
          description: Unauthorized
          content:
            application/json::
              schema:
                title: Unauthorized
                type: string
                example: Unauthorized
          
        '403':
          description: Forbidden
          content:
            application/json::
              schema:
                title: Forbidden
                type: string
                example: Forbidden
        "404":
          description: Not found response
          content:
            application/json::
              schema:
                title: Services not found
                type: string
                example: Not found

  /services/{service_id}/subscriptions:
    get:
      tags:
      - Subscriptions
      summary: "Get List Api"
      operationId: GetListApi
      parameters:
        - in: path 
          name: service_id
          required: true
          schema:
            type: string
            format: uuid
            example: a84c333b-b1ff-46d7-aa5e-640f241b0913
        - in: query
          name: sort
          schema:
            type: string
            enum:
              - service_subscriptions.created_at
        - in: query
          name: include
          schema:
            type: string
            enum:
              - receiver.kind
              - receiver.mock_services
              - receiver.mock_services.project
              - receiver.project
              - accesses.environment
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/per'
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/subscriptions'
                  included:
                    type: array
                    items:
                      anyOf:
                        - $ref: '#/components/schemas/services'
                        - $ref: '#/components/schemas/project'
                        - $ref: '#/components/schemas/serviceKinds'
                  meta:
                    $ref: '#/components/schemas/meta'

        '401':
          description: Unauthorized
          content:
            application/json::
              schema:
                title: Unauthorized
                type: string
                example: Unauthorized
          
        '403':
          description: Forbidden
          content:
            application/json::
              schema:
                title: Forbidden
                type: string
                example: Forbidden
        "404":
          description: Not found response
          content:
            application/json::
              schema:
                title: Api not found
                type: string
                example: Not found
    post:
      tags:
      - Subscriptions
      summary: "Add Api"
      operationId: AddApi
      parameters:
        - in: path 
          name: service_id
          required: true
          schema:
            type: string
            format: uuid
            example: 6477643e-b054-42c7-8071-b0a4c1753fb1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              title: data
              type: object
              properties:
                attributes:
                  type: object
                  properties:
                    receiver_id:
                      type: string
                      format: uuid
                      example: d6c683c8-84a8-48bd-b30a-8183000543cc
                relationships:
                  type: object
                  properties:
                    accesses:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/relationship'
                type:
                  type: string
                  default: subscriptions
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/subscriptions'
  /subscriptions/{api_id}:
    delete:
      tags:
      - Subscriptions
      summary: "Delete Api"
      operationId: Delete Api
      parameters:
        - in: path 
          name: api_id
          required: true
          schema:
            type: string
            format: uuid
            example: a84c333b-b1ff-46d7-aa5e-640f241b0913
      responses:
        "200":
          description: Deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/subscriptions'

  /services/{service_id}/paas_subscriptions:
    get:
      tags:
      - Subscriptions
      summary: "Get List PaaS"
      operationId: GetListPaaS
      parameters:
        - in: path 
          name: service_id
          required: true
          schema:
            type: string
            format: uuid
            example: a84c333b-b1ff-46d7-aa5e-640f241b0913
        - in: query
          name: sort
          schema:
            type: string
            enum:
              - created_at
        - in: query
          name: include
          schema:
            type: string
            enum:
              - deployments.environment
              - platform_service.system_component
              - platform_service.integrations
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/per'
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/paasSubscriptions'
                  included:
                    type: array
                    items:
                      anyOf:
                        - $ref: '#/components/schemas/platformServices'
                        - $ref: '#/components/schemas/systemComponents'
                        - $ref: '#/components/schemas/integrations'
                        - $ref: '#/components/schemas/platformServiceDeployments'
                        - $ref: '#/components/schemas/environments'
                  meta:
                    $ref: '#/components/schemas/meta'
        '401':
          description: Unauthorized
          content:
            application/json::
              schema:
                title: Unauthorized
                type: string
                example: Unauthorized
          
        '403':
          description: Forbidden
          content:
            application/json::
              schema:
                title: Forbidden
                type: string
                example: Forbidden
        "404":
          description: Not found response
          content:
            application/json::
              schema:
                title: PaaS not found
                type: string
                example: Not found
    post:
      tags:
      - Subscriptions
      summary: "Add PaaS"
      operationId: AddPaaS
      parameters:
        - in: path 
          name: service_id
          required: true
          schema:
            type: string
            format: uuid
            example: 6477643e-b054-42c7-8071-b0a4c1753fb1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              title: data
              type: object
              properties:
                attributes:
                  type: object
                  properties:
                    platform_service_id:
                      type: string
                      format: uuid
                      example: 1ffca188-14ea-4c08-a6a9-5af0d6008abf
                relationships:
                  type: object
                  properties:
                    deployments:
                      type: object
                      properties:
                        data:
                          type: array
                          items:
                            $ref: '#/components/schemas/relationship'
                type:
                  type: string
                  default: paasSubscriptions
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/paasSubscriptions' 
  /services/{service_id}/mock_subscriptions:
    get:
      tags:
      - Subscriptions
      summary: "Get Mock Subscription  "
      operationId: GetMockSubscription
      parameters:
        - in: path 
          name: service_id
          required: true
          schema:
            type: string
            format: uuid
            example: a84c333b-b1ff-46d7-aa5e-640f241b0913
        - in: query
          name: sort
          schema:
            type: string
            enum: 
              - service_subscriptions.created_at
        - in: query
          name: include
          schema:
            type: string
            default: receiver.kind,receiver.project
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/per'
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/subscriptions'
                  included:
                    type: array
                    items:
                      anyOf:
                        - $ref: '#/components/schemas/services'
                        - $ref: '#/components/schemas/project'
                        - $ref: '#/components/schemas/serviceKinds'
        '401':
          description: Unauthorized
          content:
            application/json::
              schema:
                title: Unauthorized
                type: string
                example: Unauthorized
          
        '403':
          description: Forbidden
          content:
            application/json::
              schema:
                title: Forbidden
                type: string
                example: Forbidden
        "404":
          description: Not found response
          content:
            application/json::
              schema:
                title: Mock not found
                type: string
                example: Not found
                     
  /platform_services/paas_deployments:
    post:
      tags:
      - Subscriptions
      summary: "Add Paas Deployment"
      operationId: AddPaasDeployment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              title: data
              type: object
              properties:
                attributes:
                  type: object
                  properties:
                    environmentId:
                      type: string
                      format: uuid
                      example: 744ef863-5b1e-4d9d-829a-085d7ad17a8a
                    servicePaasSubscriptionId:
                      type: string
                      format: uuid
                      example: e3cabfbe-ec1f-4e0b-9dbb-d7f84d1ef4ed
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/platformServiceDeployments'

  /platform_services/paas_deployments/{paas_deployment_id}/undeploy:
    patch:
      tags:
      - Subscriptions
      summary: "Delete Paas Deployment"
      operationId: DeletePaasDeployment
      parameters:
        - in: path 
          name: paas_deployment_id
          required: true
          schema:
            type: string
            format: uuid
            example: fc1126e8-f002-4ca3-94b0-df7ec51f2563
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/platformServiceDeployments'
        '401':
          description: Unauthorized
          content:
            application/json::
              schema:
                title: Unauthorized
                type: string
                example: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json::
              schema:
                title: Forbidden
                type: string
                example: Forbidden
        "404":
          description: Not found response
          content:
            application/json::
              schema:
                title: Deployments not found
                type: string
                example: Not found

  /paas_subscriptions/{paas_id}:
    delete:
      tags:
      - Subscriptions
      summary: "Delete Paas"
      operationId: DeletePaas
      parameters:
        - in: path 
          name: paas_id
          required: true
          schema:
            type: string
            format: uuid
            example: d4e0d973-e11c-4e0f-8fff-05dd09c51e94
      responses:
        "200":
          description: Deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/paasSubscriptions' 
  
  /services/{service_id}/deployments:
    get:
      tags:
      - Deployments
      summary: "Get Service Deployments"
      operationId: GetServiceDeployments
      parameters:
        - in: path 
          name: service_id
          required: true
          schema:
            type: string
            format: uuid
            example: eff26064-4117-4d84-bbba-3b3c89fd2bb2
        - in: query
          name: filter
          style: deepObject
          schema:
            type: object
            properties:
              q:
                type: string
              enviroment_id:
                type: string
                format: uuid
        - in: query
          name: include
          schema:
            type: string
            example: enviroments,build.release, tempalte.adress, checks
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/per'
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/deployments'
                  included:
                    type: array
                    items:
                      anyOf:
                      - $ref: '#/components/schemas/builds'
                      - $ref: '#/components/schemas/releases'
                      - $ref: '#/components/schemas/environments'
                      - $ref: '#/components/schemas/templates'
                      - $ref: '#/components/schemas/templateAddresses'
                  meta:
                    $ref: '#/components/schemas/meta'
        '401':
          description: Unauthorized
          content:
            application/json::
              schema:
                title: Unauthorized
                type: string
                example: Unauthorized
          
        '403':
          description: Forbidden
          content:
            application/json::
              schema:
                title: Forbidden
                type: string
                example: Forbidden
        "404":
          description: Not found response
          content:
            application/json::
              schema:
                title: Deployments not found
                type: string
                example: Not found
  /deployments/{deployment_id}:
    get:
      tags:
      - Deployments
      summary: "Get Deployment Details"
      operationId: GetDeploymentDetails
      parameters:
        - in: path 
          name: deployment_id
          required: true
          schema:
            type: string
            format: uuid
            example: a84c333b-b1ff-46d7-aa5e-640f241b0913
        - in: query
          name: include
          schema:
            type: string
            default: environment,build.release.step,template.addresses,processing_errors
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/deployments'
                  included:
                    type: array
                    items:
                      anyOf:
                        - $ref: '#/components/schemas/builds'
                        - $ref: '#/components/schemas/releases'
                        - $ref: '#/components/schemas/releaseStep'
                        - $ref: '#/components/schemas/environments'
                        - $ref: '#/components/schemas/templates'
                        - $ref: '#/components/schemas/templateAddresses'
                        - $ref: '#/components/schemas/processingErrors'
        '401':
          description: Unauthorized
          content:
            application/json::
              schema:
                title: Unauthorized
                type: string
                example: Unauthorized
          
        '403':
          description: Forbidden
          content:
            application/json::
              schema:
                title: Forbidden
                type: string
                example: Forbidden
        "404":
          description: Not found response
          content:
            application/json::
              schema:
                title: Deployments not found
                type: string
                example: Not found
    patch:
      tags:
      - Deployments
      summary: "Rerun Deployment"
      operationId: RerunDeployment
      parameters:
        - in: path 
          name: deployment_id
          required: true
          schema:
            type: string
            format: uuid
            example: ebf0fad5-ab7c-4eee-9b6e-3937e1585952
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/deployments'
        '401':
          description: Unauthorized
          content:
            application/json::
              schema:
                title: Unauthorized
                type: string
                example: Unauthorized
          
        '403':
          description: Forbidden
          content:
            application/json::
              schema:
                title: Forbidden
                type: string
                example: Forbidden
        "404":
          description: Not found response
          content:
            application/json::
              schema:
                title: Deployments not found
                type: string
                example: Not found
    delete:
      tags:
      - Deployments
      summary: "Delete Deployment"
      operationId: DeleteDeployment
      parameters:
        - in: path 
          name: deployment_id
          required: true
          schema:
            type: string
            format: uuid
            example: ebf0fad5-ab7c-4eee-9b6e-3937e1585952
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/deployments'
        '401':
          description: Unauthorized
          content:
            application/json::
              schema:
                title: Unauthorized
                type: string
                example: Unauthorized
          
        '403':
          description: Forbidden
          content:
            application/json::
              schema:
                title: Forbidden
                type: string
                example: Forbidden
        "404":
          description: Not found response
          content:
            application/json::
              schema:
                title: Deployments not found
                type: string
                example: Not found
  /builds/{build_id}/deployments:
    post:
      tags:
      - Deployments
      summary: "Add Deployment"
      operationId: AddDeployment
      parameters:
        - in: path 
          name: build_id
          required: true
          schema:
            type: string
            format: uuid
            example: ebf0fad5-ab7c-4eee-9b6e-3937e1585952
      requestBody:
        required: true
        content:
          application/json:
            schema:
              title: data
              type: object
              properties:
                attributes:
                  type: object
                  properties:
                    checks_attributes:
                      type: array
                      items:
                        type: object
                        properties:
                          label:
                            type: string
                            example: Авторизация
                          mandatory:
                            type: boolean
                          value:
                            type: string
                            example: authorization
                    templateId:
                      type: string
                      format: uuid
                      example: ea42cd10-4c3c-4ca5-b378-6b9d12baa1df
                type:
                  type: string
                  default: deployments
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/deployments'
        '401':
          description: Unauthorized
          content:
            application/json::
              schema:
                title: Unauthorized
                type: string
                example: Unauthorized
          
        '403':
          description: Forbidden
          content:
            application/json::
              schema:
                title: Forbidden
                type: string
                example: Forbidden
        "404":
          description: Not found response
          content:
            application/json::
              schema:
                title: Deployments not found
                type: string
                example: Not found
  /releases/{release_id}/update_service:
    post:
      tags:
      - Deployments
      summary: "Add Deployment"
      operationId: AddDeployment
      parameters:
        - in: path 
          name: release_id
          required: true
          schema:
            type: string
            format: uuid
            example: d9923aa6-3044-47b9-9ecb-7f7f04a5c581
      requestBody:
        required: true
        content:
          application/json:
            schema:
              title: data
              type: object
              properties:
                attributes:
                  type: object
                  properties:
                    checks_attributes:
                      type: array
                      items:
                        type: object
                        properties:
                          label:
                            type: string
                            example: Авторизация
                          mandatory:
                            type: boolean
                          value:
                            type: string
                            example: authorization
                    templateId:
                      type: string
                      format: uuid
                      example: ea42cd10-4c3c-4ca5-b378-6b9d12baa1df
                type:
                  type: string
                  default: deployments
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/deployments'
        '401':
          description: Unauthorized
          content:
            application/json::
              schema:
                title: Unauthorized
                type: string
                example: Unauthorized
          
        '403':
          description: Forbidden
          content:
            application/json::
              schema:
                title: Forbidden
                type: string
                example: Forbidden
        "404":
          description: Not found response
          content:
            application/json::
              schema:
                title: Deployments not found
                type: string
                example: Not found
  /services/{service_id}/templates:
    get:
      tags:
      - Templates
      summary: "Get Templates"
      operationId: GetTemplates
      parameters:
        - in: path 
          name: service_id
          required: true
          schema:
            type: string
            format: uuid
            example: eff26064-4117-4d84-bbba-3b3c89fd2bb2
        - in: query
          name: filter0
          style: deepObject
          schema:
            type: object
            properties:
              q:
                type: string
              active:
                type: boolean
                default: true
        - in: query
          name: sort
          schema:
            type: string
            enum: 
              - created_at
              - name
        - in: query
          name: include
          schema:
            type: string
            example: addresses,deployment,environment,dynamic_parameters,environment_variables
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/per'
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/templates'
                  included:
                    type: array
                    items:
                      anyOf:
                      - $ref: '#/components/schemas/environments'
                      - $ref: '#/components/schemas/deployments'
                      - $ref: '#/components/schemas/templateAddresses'
                  meta:
                    $ref: '#/components/schemas/meta'
        '401':
          description: Unauthorized
          content:
            application/json::
              schema:
                title: Unauthorized
                type: string
                example: Unauthorized
          
        '403':
          description: Forbidden
          content:
            application/json::
              schema:
                title: Forbidden
                type: string
                example: Forbidden
        "404":
          description: Not found response
          content:
            application/json::
              schema:
                title: Templates not found
                type: string
                example: Not found
  /templates/{template_id}:
    get:
      tags:
      - Templates
      summary: "Get Template Details"
      operationId: GetTemplateDetails
      parameters:
        - in: path 
          name: template_id
          required: true
          schema:
            type: string
            format: uuid
            example: eff26064-4117-4d84-bbba-3b3c89fd2bb2
        - in: query
          name: include
          schema:
            type: string
            example: addresses,environment,dynamic_parameters,environment_variables,deployment,platform_service_deployments,template_platform_service_deployments,processing_errors,environment_variable_mappings,file_mappings
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/templates'
                  included:
                    type: array
                    items:
                      anyOf:
                      - $ref: '#/components/schemas/environments'
                      - $ref: '#/components/schemas/platformServiceDeployments'
                      - $ref: '#/components/schemas/templateAddresses'
                      - $ref: '#/components/schemas/templatePlatformServiceDeployments'
        '401':
          description: Unauthorized
          content:
            application/json::
              schema:
                title: Unauthorized
                type: string
                example: Unauthorized
          
        '403':
          description: Forbidden
          content:
            application/json::
              schema:
                title: Forbidden
                type: string
                example: Forbidden
        "404":
          description: Not found response
          content:
            application/json::
              schema:
                title: Template not found
                type: string
                example: Not found
    patch:
      tags:
      - Templates
      summary: "Edit Template"
      operationId: EditTemplate
      parameters:
        - in: path 
          name: template_id
          required: true
          schema:
            type: string
            format: uuid
            example: eff26064-4117-4d84-bbba-3b3c89fd2bb2
      requestBody:
        required: true
        content:
          application/json:
            schema:
              title: data
              type: object
              properties:
                attributes:
                  type: object
                  properties:
                    addressesAttributes:
                      type: array
                      items:
                        type: object
                        properties:
                          code:
                            type: string
                            example: grpc
                          fullUrl:
                            type: string
                            example: https://dev.dshtest37.apps.okd-lan.pdev.vsk.ru
                          id:
                            type: string
                            format: uuid
                            example: aec9504c-edcc-449a-9c5b-35272bfa3202
                          name:
                            type: string
                            example: gRPC
                          port:
                            type: integer
                            example: 5555
                          urlPart:
                            type: string
                            example: dshtest37
                    description:
                      type: string
                    dynamicParametersAttributes:
                      type: array
                      items:
                        type: object
                        properties:
                          fieldId:
                            type: string
                            format: uuid
                            example: 46841e4d-70b0-4ecc-a9d9-5da6b831bfe7
                          fieldType:
                            type: string
                            example: Service::EnvironmentVariable
                          id:
                            type: string
                            format: uuid
                            example: 7a3db42a-e26d-4ec0-8d0f-3de473abf4ea
                          value:
                            type: string
                    environmentId:
                      type: string
                      format: uuid
                      example: 744ef863-5b1e-4d9d-829a-085d7ad17a8a
                    livenessProbes:
                      type: string
                    name:
                      type: string
                    readinessProbes:
                      type: string
                    replicas:
                      type: integer
                    template_platform_service_deployments_attributes:
                      type: array
                      items:
                        type: object
                        properties:
                          id: 
                            type: string
                            format: uuid
                            example: 5876f3e0-97f9-4edf-a6c4-d5eff4451dbe
                          options:
                            type: object
                            properties:
                              additionalParams:
                                type: string
                                example: -f db-folder
                              passwordParamName:
                                type: string
                                example: jdbc.password
                              urlParamName:
                                type: string
                                example: jdbc.url
                              userParamName:
                                type: string
                                example: jdbc.user
                          platform_service_deployment_id:
                            type: string
                            format: uuid
                            example: 6124c9e2-378f-4da1-8094-24a5cae45474
                    useMapping:
                      type: boolean
                id:
                  type: string
                  format: uuid
                  example: ffb092a1-7a2a-4c70-8f92-45d2b06d0f4d
                type:
                  type: string
                  default: templates
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/templates'
        '401':
          description: Unauthorized
          content:
            application/json::
              schema:
                title: Unauthorized
                type: string
                example: Unauthorized
          
        '403':
          description: Forbidden
          content:
            application/json::
              schema:
                title: Forbidden
                type: string
                example: Forbidden
        "404":
          description: Not found response
          content:
            application/json::
              schema:
                title: Templates not found
                type: string
                example: Not found  
    delete:
      tags:
      - Templates
      summary: "Delete Template"
      operationId: DeleteTemplate
      parameters:
        - in: path 
          name: template_id
          required: true
          schema:
            type: string
            format: uuid
            example: eff26064-4117-4d84-bbba-3b3c89fd2bb2
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/templates'
        '401':
          description: Unauthorized
          content:
            application/json::
              schema:
                title: Unauthorized
                type: string
                example: Unauthorized
          
        '403':
          description: Forbidden
          content:
            application/json::
              schema:
                title: Forbidden
                type: string
                example: Forbidden
        "404":
          description: Not found response
          content:
            application/json::
              schema:
                title: Templates not found
                type: string
                example: Not found 
  /templates/check_validity:
    get:
      tags:
      - Templates
      summary: "Get Validity"
      operationId: GetValidity
      
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/check_validity'
                   
        '401':
          description: Unauthorized
          content:
            application/json::
              schema:
                title: Unauthorized
                type: string
                example: Unauthorized
          
        '403':
          description: Forbiddenf
          content:
            application/json::
              schema:
                title: Forbidden
                type: string
                example: Forbidden
        "404":
          description: Not found response
          content:
            application/json::
              schema:
                title: Projects not found
                type: string
                example: Not found                
  /deployments:
    get:
      tags:
      - View
      summary: "Get Deployments"
      operationId: GetDeployments
      parameters:
        - in: query
          name: filter
          style: deepObject
          schema:
            type: object
            properties:
              q:
                type: string
              environment_ids:
                type: string
                format: uuid
              status:
                type: string
                example: pending,running,success,stopping,failed_to_stop,stopped
        - in: query
          name: sort
          schema:
            type: string
            enum:
             - created_at
             - environments
             - runtime_environments
             - status
             - ervice_templates
             - services
             - projects
        - in: query
          name: include
          schema:
            type: string
            example: environment,template.addresses,service.project
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/per'
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          type: array
                          items:
                            type: object
                            properties:
                              attributes:
                                type: object
                                properties:
                                  availableStates:
                                    type: array
                                    items:
                                      type: string
                                      enum:
                                        - failed
                                        - success
                                        - stopped
                                        - deleted
                                  createdAt:
                                    type: string
                                    pattern: yyyy-MM-dd'T'HH:mm:ss.SSSZ
                                    example: 2022-03-29T08:20:23.781Z
                                  environmentCode:
                                    type: string
                                    enum:
                                     - dev
                                     - test
                                     - stage
                                     - prod
                                  hasJenkinsLog:
                                    type: boolean
                                  number:
                                    type: integer
                                  runtimeEnvironment:
                                    type: string
                                    example: OpenShift
                                  status:
                                    type: string
                                    example: success
                                  validity:
                                    type: boolean
                              id:
                                type: string
                                format: uuid
                                example: fcc2d9ab-bd83-4d9c-bcc5-466c4b383842
                              relationships:
                                type: object
                                properties:
                                  environment:
                                    type: object
                                    properties:
                                      data:
                                        $ref: '#/components/schemas/relationship'
                                  service:
                                    type: object
                                    properties:
                                      data:
                                        $ref: '#/components/schemas/relationship'
                                  template:
                                    type: object
                                    properties:
                                      data:
                                        $ref: '#/components/schemas/relationship'
                              type:
                                type: string
                                default: deployments
                  included:
                    type: array
                    items:
                      type: object
                      properties:
                        schema:
                          anyOf:
                          - $ref: '#/components/schemas/services'
                          - $ref: '#/components/schemas/project'
                          - $ref: '#/components/schemas/environments'
                          - $ref: '#/components/schemas/templates'
                          - $ref: '#/components/schemas/templateAddresses'
                  meta:
                    $ref: '#/components/schemas/meta' 
        '401':
          description: Unauthorized
          content:
            application/json::
              schema:
                title: Unauthorized
                type: string
                example: Unauthorized
          
        '403':
          description: Forbidden
          content:
            application/json::
              schema:
                title: Forbidden
                type: string
                example: Forbidden
        "404":
          description: Not found response
          content:
            application/json::
              schema:
                title: Deployments not found
                type: string
                example: Not found         
  /services/{service_id}/builds:
    get:
      tags:
      - Builds
      summary: "Get Builds"
      operationId: GetBuilds
      parameters:
        - in: path 
          name: service_id
          required: true
          schema:
            type: string
            format: uuid
            example: eff26064-4117-4d84-bbba-3b3c89fd2bb2
        - in: query
          name: include
          schema:
            type: string
            example: deployments, checks
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/per'
            
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/builds'
                  included:
                    type: array
                    items:
                      $ref: '#/components/schemas/checks'
                  meta:
                    $ref: '#/components/schemas/meta'
                   
        '401':
          description: Unauthorized
          content:
            application/json::
              schema:
                title: Unauthorized
                type: string
                example: Unauthorized
          
        '403':
          description: Forbidden
          content:
            application/json::
              schema:
                title: Forbidden
                type: string
                example: Forbidden
        "404":
          description: Not found response
          content:
            application/json::
              schema:
                title: Builds not found
                type: string
                example: Not found
                
    post:
      tags:
      - Builds
      summary: "Add Builds"
      operationId: AddBuilds
      parameters:
        - in: path 
          name: service_id
          required: true
          schema:
            type: string
            format: uuid
            example: 6477643e-b054-42c7-8071-b0a4c1753fb1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              title: data
              type: object
              properties:
                attributes:
                  type: object
                  properties:
                    checks_attributes:
                      type: array
                      items:
                        type: object
                        properties:
                          active:
                            type: boolean
                          code:
                            type: string
                            example: quality, units, build
                          mandatory:
                            type: boolean
                          name:
                            type: string
                            example: SonarQube, Unit-тесты, Build
                    commit:
                      type: string
                    description:
                      type: string
                    title:
                      type: string
                      example: sborka1
                type:
                  type: string
                  default: builds
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/builds'

  /builds/{build_id}:
    patch:
      tags:
      - Builds
      summary: "Edit Build"
      operationId: EditBuild
      parameters:
        - in: path
          name: build_id
          required: true
          schema:
            type: string
            format: uuid
            example: acb1d28e-af7f-47a9-9a6b-43f8e5ca8b4d
      requestBody:
        required: true
        content:
          application/json:
            schema:
              title: data
              type: object
              properties:
                attributes:
                  type: object
                  properties:
                    checks_attributes:
                      type: object
                      properties:
                        active:
                          type: boolean
                        code:
                          type: string
                          example: build
                        id:
                          type: string
                          format: uuid
                          example: 288c9f43-9cb4-473c-ba48-05419c19af47
                        mandatory:
                          type: boolean
                        name:
                          type: string
                          example: Build
                    description:
                      type: string
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/builds'
    delete:
      tags:
      - Builds
      summary: "Delete Build"
      operationId: DeleteBuild
      parameters:
        - in: path
          name: build_id
          required: true
          schema:
            type: string
            format: uuid
            example: acb1d28e-af7f-47a9-9a6b-43f8e5ca8b4d
      responses:
        "200":
          description: Deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/builds'

  /services/{service_id}/releases:
    get:
      tags:
      - Releases
      summary: "Get Releases"
      operationId: GetReleases
      parameters:
        - in: path
          name: service_id
          required: true
          schema:
            type: string
            format: uuid
            example: eff26064-4117-4d84-bbba-3b3c89fd2bb2        
        - in: query
          name: filter
          style: deepObject
          schema:
            type: object
            properties:
              show:
                type: string
                default: all
        - in: query            
          name: sort
          schema:
            type: string
            default: -created_at
        - in: query
          name: include
          schema:
            type: string
            example: step, enviroments
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/per'
            
      
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/releases'
                  included:
                    type: array
                    items:
                      anyOf:
                      - $ref: '#/components/schemas/releaseStep'
                      - $ref: '#/components/schemas/environments'
                  meta:
                    $ref: '#/components/schemas/meta'
        '401':
          description: Unauthorized
          content:
            application/json::
              schema:
                title: Unauthorized
                type: string
                example: Unauthorized
        '403':
          description: Forbiddenf
          content:
            application/json::
              schema:
                title: Forbidden
                type: string
                example: Forbidden
        "404":
          description: Not found response
          content:
            application/json::
              schema:
                title: Releases not found
                type: string
                example: Not found
    post:
      tags:
      - Releases
      summary: "Add Releases"
      operationId: AddReleases
      parameters:
        - in: path
          name: service_id
          required: true
          schema:
            type: string
            format: uuid
            example: a84c333b-b1ff-46d7-aa5e-640f241b0913
      requestBody:
        required: true
        content:
          application/json:
            schema:
              title: data
              type: object
              properties:
                attributes:
                  type: object
                  properties:
                    buildId:
                      type: string
                      format: uuid
                      example: f0175da3-3012-4648-9390-d4285ea88501
                    commitApi:
                      type: string
                    description:
                      type: string
                    releaseDate:
                      type: string
                      pattern: yyyy-MM-dd'T'HH:mm:ss.SSSZ
                      example: 2022-04-15T10:48:24.415Z
                    version:
                      type: string
                      example: 0.0.0.0
                relationships:
                  type: object
                  properties:
                    builds:
                      type: object
                      properties:
                        data:
                          type: array
                          items:
                            $ref: '#/components/schemas/relationship'
                    dependencies:
                      type: object
                      properties:
                        data:
                          type: array
                          items:
                            $ref: '#/components/schemas/relationship'
                    environment:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/relationship'
                    service:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/relationship'
                type:
                  type: string
                  default: releases
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                title: data
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/releases'
                  included:
                    type: array
                    items:
                      $ref: '#/components/schemas/releaseStep'
                          
  /releases/{release_id}:
    patch:
      tags:
      - Releases
      summary: "Edit Releases"
      operationId: EditReleases
      parameters:
        - in: path
          name: release_id
          required: true
          schema:
            type: string
            format: uuid
            example: 5e081d76-9460-461d-abaf-fa781f88c397
      requestBody:
        required: true
        content:
          application/json:
            schema:
              title: data
              type: object
              properties:  
                attributes:
                  type: object
                  properties:
                    buildId:
                      type: string
                      format: uuid
                      example: ef9e0be3-4058-4735-8a47-db01e64325f2
                    checks_attributes:
                      type: array
                      items:
                        type: object
                        properties:
                          active:
                            type: boolean
                          id:
                            type: string
                            format: uuid
                            example: 4f9080e-5fe2-44b9-b46a-209eab5782cf
                    commitApi:
                      type: string
                    dependencies_attributes:
                      type: string
                    description:
                      type: string
                    releaseDate:
                      type: string
                      pattern: yyyy-MM-dd'T'HH:mm:ss.SSSZ
                      example: 2022-04-15T10:48:24.415Z
                type: 
                  type: string
                  default: releases
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/releases'
                  included:
                    $ref: '#/components/schemas/releaseStep'
        '401':
          description: Unauthorized
          content:
            application/json::
              schema:
                title: Unauthorized
                type: string
                example: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json::
              schema:
                title: Forbidden
                type: string
                example: Forbidden
        "404":
          description: Not found response
          content:
            application/json::
              schema:
                title: Releases not found
                type: string
                example: Not found
    delete:
      tags:
      - Releases
      summary: "Delete Releases"
      operationId: DeleteReleases
      parameters:
        - in: path
          name: release_id
          required: true
          schema:
            type: string
            format: uuid
            example: 5e081d76-9460-461d-abaf-fa781f88c397
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/releases'
        '401':
          description: Unauthorized
          content:
            application/json::
              schema:
                title: Unauthorized
                type: string
                example: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json::
              schema:
                title: Forbidden
                type: string
                example: Forbidden
        "404":
          description: Not found response
          content:
            application/json::
              schema:
                title: Releases not found
                type: string
                example: Not found
  /releases/{release_id}/action:
    patch:
      tags:
      - Releases
      summary: "Close Releases"
      operationId: CloseReleases
      parameters:
        - in: path
          name: release_id
          required: true
          schema:
            type: string
            format: uuid
            example: 5e081d76-9460-461d-abaf-fa781f88c397
      requestBody:
        required: true
        content:
          application/json:
            schema:
              title: data
              type: object
              properties:
                comment:
                  type: string
                operation:
                  type: string
                  default: close
      responses:
        "200":
          description: Release is closed
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/releases'
                  included:
                    type: array
                    items:
                      $ref: '#/components/schemas/releaseStep'
        '401':
          description: Unauthorized
          content:
            application/json::
              schema:
                title: Unauthorized
                type: string
                example: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json::
              schema:
                title: Forbidden
                type: string
                example: Forbidden
        "404":
          description: Not found response
          content:
            application/json::
              schema:
                title: Releases not found
                type: string
                example: Not found
  /events:
    get:
      tags:
      - Events
      summary: "Get Events"
      operationId: GetEvents
      parameters:
        - in: query
          name: filter
          style: deepObject
          schema:
            type: object
            properties:
              from:
                type: string
              till:
                type: string
              q:
                type: string
        - in: query
          name: sort
          schema:
            type: string
            enum:
              - created_at
              - event_name
              - user_fio
              - model_type
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/per'
      
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/events'
                  meta:
                    $ref: '#/components/schemas/meta'
                  
                   
        '401':
          description: Unauthorized
          content:
            application/json::
              schema:
                title: Unauthorized
                type: string
                example: Unauthorized
          
        '403':
          description: Forbidden
          content:
            application/json::
              schema:
                title: Forbidden
                type: string
                example: Forbidden
        "404":
          description: Not found response
          content:
            application/json::
              schema:
                title: Events not found
                type: string
                example: Not found
                
                

  /environmets:
    get:
      tags:
      - Environments
      summary: "Get List Environments"
      operationId: GetListEnvironments
      parameters:
        - in: query
          name: filter
          schema:
            type: object
            properties:
              show:
                type: string
                default: all
        - in: query
          name: sort
          schema:
            type: string
            default: order      
      
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/environments'
                   
        '401':
          description: Unauthorized
          content:
            application/json::
              schema:
                title: Unauthorized
                type: string
                example: Unauthorized
          
        '403':
          description: Forbidden
          content:
            application/json::
              schema:
                title: Forbidden
                type: string
                example: Forbidden
        "404":
          description: Not found response
          content:
            application/json::
              schema:
                title: Environments not found
                type: string
                example: Not found
                
    post:
      tags:
      - Environments
      summary: "Add Environment"
      operationId: AddEnvironment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              title: data
              type: object
              properties:
                attributes:
                  type: object
                  properties:
                    code:
                      type: string
                    color:
                      type: string
                    description:
                      type: string
                    groups:
                      type: array
                      items:
                        type: string
                        example: exploitation, developer
                    name:
                      type: string
                    skipBuild:
                      type: boolean
                    skipMaintenance:
                      type: boolean
                type:
                  type: string
                  default: environments
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/environments'
                   
        '401':
          description: Unauthorized
          content:
            application/json::
              schema:
                title: Unauthorized
                type: string
                example: Unauthorized
          
        '403':
          description: Forbidden
          content:
            application/json::
              schema:
                title: Forbidden
                type: string
                example: Forbidden
        "404":
          description: Not found response
          content:
            application/json::
              schema:
                title: Environments not found
                type: string
                example: Not found
                
  /environments/{environment_id}:
    get:
      tags:
      - Environments
      summary: "Get Environments"
      operationId: GetEnvironments
      parameters:
        - in: path 
          name: environment_id    
          required: true
          schema:
            type: string
            format: uuid
            example: eff26064-4117-4d84-bbba-3b3c89fd2bb2          

      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/environments'
                   
        '401':
          description: Unauthorized
          content:
            application/json::
              schema:
                title: Unauthorized
                type: string
                example: Unauthorized
          
        '403':
          description: Forbidden
          content:
            application/json::
              schema:
                title: Forbidden
                type: string
                example: Forbidden
        "404":
          description: Not found response
          content:
            application/json::
              schema:
                title: Environments not found
                type: string
                example: Not found   
    patch:
      tags:
      - Environments
      summary: "Edit Environment"
      operationId: EditEnvironment
      parameters:
        - in: path 
          name: environment_id    
          required: true
          schema:
            type: string
            format: uuid
            example: eff26064-4117-4d84-bbba-3b3c89fd2bb2
      requestBody:
        required: true
        content:
          application/json:
            schema:
              title: data
              type: object
              properties:
                attributes:
                  type: object
                  properties:
                    color:
                      type: string
                    description:
                      type: string
                    groups:
                      type: array
                      items:
                        type: string
                        example: exploitation, developer
                    name:
                      type: string
                    skipBuild:
                      type: boolean
                    skipMaintenance:
                      type: boolean
                id:
                  type: string
                  format: uuid
                  example: ceb733ea-e366-4e73-8c10-f7101841f37e
                relationships:
                  type: object
                  properties:
                    systemComponentExemplars:
                      type: object
                      properties:
                        data:
                          type: array
                          items:
                            $ref: '#/components/schemas/environments'
                type:
                  type: string
                  default: environments
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/environments'
                   
        '401':
          description: Unauthorized
          content:
            application/json::
              schema:
                title: Unauthorized
                type: string
                example: Unauthorized
          
        '403':
          description: Forbidden
          content:
            application/json::
              schema:
                title: Forbidden
                type: string
                example: Forbidden
        "404":
          description: Not found response
          content:
            application/json::
              schema:
                title: Environments not found
                type: string
                example: Not found 
  /environments/{environment_id}/hide:      
    patch:
      tags:
      - Environments
      summary: "Hide Environment"
      operationId: HideEnvironment
      parameters:
        - in: path 
          name: environment_id    
          required: true
          schema:
            type: string
            format: uuid
            example: eff26064-4117-4d84-bbba-3b3c89fd2bb2
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                title: Hided
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/environments'
                   
        '401':
          description: Unauthorized
          content:
            application/json::
              schema:
                title: Unauthorized
                type: string
                example: Unauthorized
          
        '403':
          description: Forbidden
          content:
            application/json::
              schema:
                title: Forbidden
                type: string
                example: Forbidden
        "404":
          description: Not found response
          content:
            application/json::
              schema:
                title: Environment not found
                type: string
                example: Not found 
                
  /systemComponents:
    get:
      tags:
      - Environments
      summary: "Get System Components"
      operationId: GetSystemComponents
      parameters:
        - in: query
          name: filter
          style: deepObject
          schema:
            type: object
            properties:
              from:
                type: string
              till:
                type: string
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/systemComponents'

                   
        '401':
          description: Unauthorized
          content:
            application/json::
              schema:
                title: Unauthorized
                type: string
                example: Unauthorized
          
        '403':
          description: Forbiddenf
          content:
            application/json::
              schema:
                title: Forbidden
                type: string
                example: Forbidden
        "404":
          description: Not found response
          content:
            application/json::
              schema:
                title: Projects not found
                type: string
                example: Not found 

  /business_processes:
    get:
      tags:
      - BusinessProcesses
      summary: "Get Business Processes"
      operationId: GetBusinessProcesses
      parameters:
        - in: query
          name: filter
          style: deepObject
          schema:
            type: object
            properties:
              q:
                type: string
              show:
                type: string
        - in: query
          name: sort
          schema:
            type: string
            enum:
              - name
              - code
              - service_name
              - project_name
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/per'
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/businessProcesses'
                  included:
                    type: array
                    items:
                      anyOf:
                      - $ref: '#/components/schemas/services'
                      - $ref: '#/components/schemas/project'
                  meta:
                    $ref: '#/components/schemas/meta'
                   
        '401':
          description: Unauthorized
          content:
            application/json::
              schema:
                title: Unauthorized
                type: string
                example: Unauthorized
          
        '403':
          description: Forbidden
          content:
            application/json::
              schema:
                title: Forbidden
                type: string
                example: Forbidden
        "404":
          description: Not found response
          content:
            application/json::
              schema:
                title: Business Processes not found
                type: string
                example: Not found
  /services/{service_id}/business_processes:
    post:
      tags:
      - BusinessProcesses
      summary: "Add Business Processes"
      operationId: AddBusinessProcesses
      parameters:
        - in: path
          name: service_id
          required: true
          schema:
            type: string
            format: uuid
            example: eff26064-4117-4d84-bbba-3b3c89fd2bb2
      requestBody:
        required: true
        content:
          application/json:
            schema:
              title: data
              type: object
              properties:
                attributes:
                  type: object
                  properties:
                    code:
                      type: string
                      example: dsfds
                    containerTypeId:
                      type: string
                      example: 
                    description:
                      type: string
                      example: sdfds
                    name: 
                      type: string
                      example: sdfdsf
                    service: 
                      type: object
                      properties:
                        __META__:
                          type: string
                          example: refs{}
                type:
                  type: string
                  default: members
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/businessProcesses'
        '401':
          description: Unauthorized
          content:
            application/json::
              schema:
                title: Unauthorized
                type: string
                example: Unauthorized
          
        '403':
          description: Forbiddenf
          content:
            application/json::
              schema:
                title: Forbidden
                type: string
                example: Forbidden
        "404":
          description: Not found response
          content:
            application/json::
              schema:
                title: Business Processes not found
                type: string
                example: Not found 
  /business_processes/{business_process_id}:
    get:
      tags:
      - BusinessProcesses
      summary: "Get Details Business Process"
      operationId: GetDetailsBusinessProcess
      parameters:
        - in: path
          name: business_process_id
          required: true
          schema:
            type: string
            format: uuid
            example: a5d1c359-5c97-4888-891f-12c9a0fbc1e1
        - in: query
          name: include
          schema:
            type: string
            example: service.project
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/businessProcesses'
                  included:
                    type: array
                    items:
                      anyOf:
                        - $ref: '#/components/schemas/services'
                        - $ref: '#/components/schemas/projects'
        '401':
          description: Unauthorized
          content:
            application/json::
              schema:
                title: Unauthorized
                type: string
                example: Unauthorized
          
        '403':
          description: Forbiddenf
          content:
            application/json::
              schema:
                title: Forbidden
                type: string
                example: Forbidden
        "404":
          description: Not found response
          content:
            application/json::
              schema:
                title: Business Processes not found
                type: string
                example: Not found
    patch:
      tags:
      - BusinessProcesses
      summary: "Edit Business Process"
      operationId: EditBusinessProcess
      parameters:
        - in: path
          name: business_process_id
          required: true
          schema:
            type: string
            format: uuid
            example: a5d1c359-5c97-4888-891f-12c9a0fbc1e1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              title: data
              type: object
              properties:
                attributes:
                  type: object
                  properties:
                    code:
                      type: string
                    description:
                      type: string
                    name:
                      type: string
                id:
                  type: string
                  format: uuid
                  example: a5d1c359-5c97-4888-891f-12c9a0fbc1e1
                relationships:
                  type: object
                  properties:
                    containerType:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/relationship'
                    service:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/relationship'
                type:
                  type: string
                  default: businessProcesses
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/businessProcesses'
        '401':
          description: Unauthorized
          content:
            application/json::
              schema:
                title: Unauthorized
                type: string
                example: Unauthorized
          
        '403':
          description: Forbiddenf
          content:
            application/json::
              schema:
                title: Forbidden
                type: string
                example: Forbidden
        "404":
          description: Not found response
          content:
            application/json::
              schema:
                title: Business Processes not found
                type: string
                example: Not found
    delete:
      tags:
      - BusinessProcesses
      summary: "Delete Business Process"
      operationId: DeleteBusinessProcess
      parameters:
        - in: path
          name: business_process_id
          required: true
          schema:
            type: string
            format: uuid
            example: a5d1c359-5c97-4888-891f-12c9a0fbc1e1
      responses:
        "200":
          description: Deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/businessProcesses'
        '401':
          description: Unauthorized
          content:
            application/json::
              schema:
                title: Unauthorized
                type: string
                example: Unauthorized
          
        '403':
          description: Forbiddenf
          content:
            application/json::
              schema:
                title: Forbidden
                type: string
                example: Forbidden
        "404":
          description: Not found response
          content:
            application/json::
              schema:
                title: Business Processes not found
                type: string
                example: Not found
  /business_processes/{business_process_id}/versions:
    get:
      tags:
      - BusinessProcesses
      summary: "Get Versions Business Process"
      operationId: GetVersionsBusinessProcess
      parameters:
        - in: path
          name: business_process_id
          required: true
          schema:
            type: string
            format: uuid
            example: a5d1c359-5c97-4888-891f-12c9a0fbc1e1
        - in: query
          name: include
          schema:
            type: string
            example: release
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/per'
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/versions'
                  included:
                    type: array
                    items:
                      $ref: '#/components/schemas/releases'
                  meta:
                    $ref: '#/components/schemas/meta'
        '401':
          description: Unauthorized
          content:
            application/json::
              schema:
                title: Unauthorized
                type: string
                example: Unauthorized
          
        '403':
          description: Forbiddenf
          content:
            application/json::
              schema:
                title: Forbidden
                type: string
                example: Forbidden
        "404":
          description: Not found response
          content:
            application/json::
              schema:
                title: Business Processes not found
                type: string
                example: Not found
    post:
      tags:
      - BusinessProcesses
      summary: "Add Versions Business Process"
      operationId: AddVersionsBusinessProcess
      parameters:
        - in: path
          name: business_process_id
          required: true
          schema:
            type: string
            format: uuid
            example: a5d1c359-5c97-4888-891f-12c9a0fbc1e1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              title: data
              type: object
              properties:
                attributes:
                  type: object
                  properties:
                    commitXml:
                      type: string
                    description:
                      type: string
                    releaseId:
                      type: string
                      format: uuid
                      example: 37afd846-087d-4e16-8051-91a6d4b85ffd
                    version:
                      type: string
                      example: 1.1.1.1
                type:
                  type: string
                  default: versions
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/versions'
        '401':
          description: Unauthorized
          content:
            application/json::
              schema:
                title: Unauthorized
                type: string
                example: Unauthorized
          
        '403':
          description: Forbiddenf
          content:
            application/json::
              schema:
                title: Forbidden
                type: string
                example: Forbidden
        "404":
          description: Not found response
          content:
            application/json::
              schema:
                title: Business Processes not found
                type: string
                example: Not found
  /versions/{version_id}:
    get:
      tags:
      - BusinessProcesses
      summary: "Get Details Versions Business Processes"
      operationId: GetDetailsVersionsBusinessProcesses
      parameters:
        - in: path
          name: version_id
          required: true
          schema:
            type: string
            format: uuid
            example: a5d1c359-5c97-4888-891f-12c9a0fbc1e1
        - in: query
          name: include
          schema:
            type: string
            example: release
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/versions'
                  included:
                    type: array
                    items:
                      $ref: '#/components/schemas/releases' 
        '401':
          description: Unauthorized
          content:
            application/json::
              schema:
                title: Unauthorized
                type: string
                example: Unauthorized
          
        '403':
          description: Forbiddenf
          content:
            application/json::
              schema:
                title: Forbidden
                type: string
                example: Forbidden
        "404":
          description: Not found response
          content:
            application/json::
              schema:
                title: Version not found
                type: string
                example: Not found
    patch:
      tags:
      - BusinessProcesses
      summary: "Edit Version Business Process"
      operationId: EditVersionBusinessProcess
      parameters:
        - in: path
          name: version_id
          required: true
          schema:
            type: string
            format: uuid
            example: a5d1c359-5c97-4888-891f-12c9a0fbc1e1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              title: data
              type: object
              properties:
                attributes:
                  type: object
                  properties:
                    commitXml:
                      type: string
                    description:
                      type: string
                id:
                  type: string
                  format: uuid
                  example: c32efcab-a31c-494e-8e35-dfacb25ec45d
                relationships:
                  type: object
                  properties:
                    businessProcess:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/relationship'
                    release:
                      type: object
                      properties:
                        data:
                          $ref: '#/components/schemas/relationship'
                type:
                  type: string
                  default: versions
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/versions'
        '401':
          description: Unauthorized
          content:
            application/json::
              schema:
                title: Unauthorized
                type: string
                example: Unauthorized
          
        '403':
          description: Forbiddenf
          content:
            application/json::
              schema:
                title: Forbidden
                type: string
                example: Forbidden
        "404":
          description: Not found response
          content:
            application/json::
              schema:
                title: Version not found
                type: string
                example: Not found
    delete:
      tags:
      - BusinessProcesses
      summary: "Delete Version Business Process"
      operationId: DeleteVersionBusinessProcess
      parameters:
        - in: path
          name: version_id
          required: true
          schema:
            type: string
            format: uuid
            example: a5d1c359-5c97-4888-891f-12c9a0fbc1e1
      responses:
        "200":
          description: Deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/versions'
        '401':
          description: Unauthorized
          content:
            application/json::
              schema:
                title: Unauthorized
                type: string
                example: Unauthorized
          
        '403':
          description: Forbiddenf
          content:
            application/json::
              schema:
                title: Forbidden
                type: string
                example: Forbidden
        "404":
          description: Not found response
          content:
            application/json::
              schema:
                title: Version not found
                type: string
                example: Not found
                
  /systemComponents/exemplars:
    get:
      tags:
      - Environments
      summary: "Get System Components Exemplars"
      operationId: GetsystemComponentsExemplars
      parameters:
      - in: query
        name: environment_id
        schema:
          type: string
          format: uuid
          example: 744ef863-5b1e-4d9d-829a-085d7ad17a8a
      - in: query
        name: include
        schema:
          type: string
          example: system_component
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/systemComponentsExemplars'
                  incuded:
                    type: array
                    items:
                      $ref: '#/components/schemas/systemComponents'
        '401':
          description: Unauthorized
          content:
            application/json::
              schema:
                title: Unauthorized
                type: string
                example: Unauthorized
          
        '403':
          description: Forbiddenf
          content:
            application/json::
              schema:
                title: Forbidden
                type: string
                example: Forbidden
        "404":
          description: Not found response
          content:
            application/json::
              schema:
                title: Projects not found
                type: string
                example: Not found  
  /systemComponents/exemplars/{exemplar_id}:
    get:
      tags:
      - Environments
      summary: "Get System Components Exemplars"
      operationId: GetsystemComponentsExemplars
      parameters:
        - in: path 
          name: exemplar_id    
          required: true
          schema:
            type: string
            format: uuid
            example: eff26064-4117-4d84-bbba-3b3c89fd2bb2 
        - in: query
          name: include
          schema:
            type: string
            example: system_component
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/systemComponentsExemplars'
                  incuded:
                    type: array
                    items:
                      $ref: '#/components/schemas/systemComponents'
                      

        '401':
          description: Unauthorized
          content:
            application/json::
              schema:
                title: Unauthorized
                type: string
                example: Unauthorized
          
        '403':
          description: Forbiddenf
          content:
            application/json::
              schema:
                title: Forbidden
                type: string
                example: Forbidden
        "404":
          description: Not found response
          content:
            application/json::
              schema:
                title: Projects not found
                type: string
                example: Not found     
                
    patch:
      tags:
      - Environments
      summary: "Edit System Component Exemplar"
      operationId: EditSystemComponentExemplar
      parameters:
        - in: path 
          name: exemplar_id    
          required: true
          schema:
            type: string
            format: uuid
            example: eff26064-4117-4d84-bbba-3b3c89fd2bb2 
      requestBody:
        required: true
        content:
          application/json:
            schema:
              title: data
              type: object
              properties:
                attributes:
                  type: object
                  properties:
                    enabled:
                      type: boolean
                    name:
                      type: string
                      example: Jenkins
                    properties:
                      type: array
                      items:
                        type: object
                        properties:
                          hint:
                            type: string
                            example: Учетная запить от Jenkins
                          label:
                            type: string
                            example: Учетная запись
                          name:
                            type: string
                            example: user
                          secret:
                            type: boolean
                          type:
                            type: string
                            example: string
                          value:
                            type: string
                            example: admin
                    id:
                      type: string
                      format: uuid
                      example: 51d16d41-94c1-4d62-8f92-0797f70b9b66
                    relationships:
                      type: object
                      properties:
                        environment:
                          type: object
                          properties:
                            data:
                              $ref: '#/components/schemas/relationship'
                        systemComponent:
                          type: object
                          properties:
                            data:
                              $ref: '#/components/schemas/relationship'
                    type:
                      type: string
                      default: systemComponentsExemplars
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/systemComponentsExemplars'
        '401':
          description: Unauthorized
          content:
            application/json::
              schema:
                title: Unauthorized
                type: string
                example: Unauthorized
          
        '403':
          description: Forbidden
          content:
            application/json::
              schema:
                title: Forbidden
                type: string
                example: Forbidden
        "404":
          description: Not found response
          content:
            application/json::
              schema:
                title: System Component Exemplar not found
                type: string
                example: Not found  
  /nexus/repositories:
    get:
      tags:
      - Repositories
      summary: "Get Repositories"
      operationId: GetRepositories

      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/repositories'
                   
        '401':
          description: Unauthorized
          content:
            application/json::
              schema:
                title: Unauthorized
                type: string
                example: Unauthorized
          
        '403':
          description: Forbiddenf
          content:
            application/json::
              schema:
                title: Forbidden
                type: string
                example: Forbidden
        "404":
          description: Not found response
          content:
            application/json::
              schema:
                title: System Component Exemplar not found
                type: string
                example: Not found              

security:
  - bearerAuth: []

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  parameters:
    page:
      name: page
      in: query
      schema:
        type: string
    per:
      name: per
      in: query
      schema:
        type: string
  schemas:
    meta:
      title: meta
      type: object
      properties:
        current:
          type: integer
          example: 1
        per:
          type: integer
          format: int32
          example: 10
        total:
          type: integer
          format: int32
          example: 24
        totalPages:
          type: integer
          format: int32
          example: 3

    members:
      title: members
      type: object
      properties:
        attributes:
          type: object
          properties:
            accessLevel: 
              type: string
              example: owner
            createdAt:
              type: string
              pattern: yyyy-MM-dd'T'HH:mm:ss.SSSZ
              example: 2022-01-19 T09:26:59.011Z
            projectId:
              type: string
              format: uuid
              example: dcb615fa-7190-4cf5-9fe0-099f3fd61c75
            updatedAt: 
              type: string
              pattern: yyyy-MM-dd'T'HH:mm:ss.SSSZ
              example: "2022-01-20 T19:36:59.011Z"
            userId:
              type: string
              example: 16
        id:
          type: string
          format: uuid
          description: project GUID 
          example: d2c16267-ebe2-4976-b018-7deae8295741
        relationships:
          type: object
          properties:
            integrations:
              type: object
              properties:
                data:
                  type: array
                  items:
                    $ref: '#/components/schemas/relationship'
            project:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/relationship' 
            user:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/relationship'
            
        type:
          type: string
          default: members

    events:
      title: events
      type: object
      properties:
        attributes:
          type: object
          properties:
            automaticExecution: 
              type: boolean
            createdAt:
              type: string
              pattern: yyyy-MM-dd'T'HH:mm:ss.SSSZ
              example: 2022-04-06T11:04:34.741Z
            eventName:
              type: string
              example: Запуск сборки после создания
            eventableLink:
              type: string
              example: services/11260da3-ab02-446b-911d-7e9a315a00c3/builds/7c744665-4572-456a-8ec8-d861b4e8dc03
            eventableName: 
              type: string
              example: test
            modelType:
              type: string
              example: Сборка сервиса
            updatedAt: 
              type: string
              pattern: yyyy-MM-dd'T'HH:mm:ss.SSSZ
              example: 2022-04-06T11:04:34.741Z
            userEmail:
              type: string
              example: developer@pdev.vsk.ru
            userFio: 
              type: string
              example: developer developer
            userIpAddress:
              type: string
              example: 172.18.0.6
        id:
          type: string
          format: uuid
          example: b0052df2-0246-474f-bd10-c83ff8ab1c26
        relationships: 
          type: object
          properties:
            eventable:
              type: object
              properties: 
                data:
                  $ref: '#/components/schemas/relationship'
            user: 
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/relationship'
        type: 
          type: string
          default: events

    deployments:
      title: deployments
      type: object
      properties:
        attributes:
          type: object
          properties:
            availableActions:
              type: array
              items:
                type: string
                enum:
                  - finish
                  - fail
                  - stop
                  - delete
                  - check_status
            availableStates:
              type: array
              items:
                type: string
                enum:
                  - failed
                  - success
                  - stopped
                  - deleted
            createdAt:
              type: string
              pattern: yyyy-MM-dd'T'HH:mm:ss.SSSZ
              example: 2021-05-31T16:01:33.250Z
            envirometsCode:
              type: string
              example: dev
            hasJenkinsLog:
              type: boolean
            JenkinsJobParameters:
              type: object
              properties:
                components:
                  type: object
                  properties:
                    enviroment:
                      type: object
                      properties:
                        jenkins:
                          type: object
                          properties:
                            credentialId:
                              type: string
                              example: gitlab_http
                        nexus:
                          type: object
                          properties:
                            profile:
                              type: string
                              example: nexus
                            repos:
                              type: object
                              properties:
                                apk:
                                  type: string
                                  example: https://mln-artifactory.pdev.vsk.ru/artifactory/dl-cdn.alpinelinux.org
                                docker:
                                  type: string
                                  example: mln-artifactory.pdev.vsk.ru/marlin-apps
                                maven:
                                  type: string
                                  example: https://mln-artifactory.pdev.vsk.ru/artifactory/marlin-maven
                                npm:
                                  type: string
                                  example: https://mln-artifactory.pdev.vsk.ru/artifactory/registry.npmjs.org
                            paas:
                              type: array
                              items:
                                type: object
                                properties:
                                  adminParams:
                                    type: object   
                                    properties:
                                      database:
                                        type: string
                                        example: postgres
                                      host:
                                        type: string
                                        example: api.okd-lan.pdev.vsk.ru:6443
                                      port:
                                        type: string
                                        example: 5432
                                      secretId:
                                        type: string
                                        example: /v1/marlin/paas/test/postgres/admin
                                  code:
                                    type: string
                                    example: postgresql
                                  instance:
                                    type: object
                                    properties:
                                      database:
                                        type: string
                                        example: dshtestpostgres4fa6c35c55de43e0
                                      migration:
                                        type: object
                                        properties:
                                          additionalParams:
                                            type: string
                                            example: -f vsk-demo-migration
                                          passwordParamName:
                                            type: string
                                            example: jdbc.password
                                          urlParamName:
                                            type: string
                                            example: jdbc.url
                                          userParamName:
                                            type: string
                                            example: jdbc.user
                                      secretId:
                                        type: string
                                        example: marlin/paas/test/postgres/dshtestpostgres4fa6c35c55de43e0
                                      username:
                                        type: string
                                        example: dshtesttest18154hbcsvpafvm0
                                  type:
                                    type: string
                                    example: OpenShift
                    platform:
                      type: object
                      properties:
                        gitLab:
                          type: object
                          properties:
                            api:
                              type: object
                              properties:
                                commitId:
                                  type: string
                                url:
                                  type: string
                                  example: https://mln-git-pd1.pdev.vsk.ru/api1/test/dshtest.git
                            repo:
                              type: object
                              properties:
                                commitId:
                                  type: string
                                url:
                                  type: string
                                  example: https://mln-git-pd1.pdev.vsk.ru/code/test/dshtest.git
                parameters:
                  type: object
                  properties:
                    action:
                      type: string
                      example: upgrade
                    meta: 
                      type: object
                      properties:
                        callbackURL: 
                          type: string
                          example: http://marlin.pdev.vsk.ru/private/api/hook/jenkins
                        jenkinsJobId:
                          type: string
                          format: uuid
                          example: fab707ef-01e8-44e2-a6dd-a378bab4eca1
                        subject:
                          type: string
                          example: job
                        subjectId: 
                          type: string
                          format: uuid
                          example: fab707ef-01e8-44e2-a6dd-a378bab4eca1
                    validations:
                      type: object
                project:
                  type: object
                  properties:
                    dependencies:
                      type: array
                      items:
                        $ref: '#/components/schemas/relationship'
                    dependentServices:
                      type: array
                      items:
                        $ref: '#/components/schemas/relationship'
                    environments:
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                            example: Реплика
                          value:
                            type: string
                    environmentsMapping:
                      type: array
                      items:
                        type: object
                    filesMapping:
                      type: array
                      items:
                        type: object
                    paasSubscriptions:
                      type: array
                      items:
                        type: object
                        properties:
                          deploymentPaas:
                            type: object
                            properties:
                              deploymentName:
                                type: string
                                example: test_1_interservice_auth
                              deploymentProtocolUrl:
                                type: string
                              deploymentUid:
                                type: string
                                format: uuid
                                example: 8adad1bd-e547-4c15-a655-c13db8a34f20
                          subscriptionId:
                            type: string
                            format: uuid
                            example: e3cabfbe-ec1f-4e0b-9dbb-d7f84d1ef4ed
                    service:
                      type: object
                      properties:
                        deployment:
                          type: object
                          properties:
                            camundaApi:
                              type: object
                              properties:
                                secretId:
                                  type: string
                                  example: /v1/marlin/paas/test/camunda/admin
                                url:
                                  type: string
                                  example: https://test.dshtest12.apps.okd-lan.pdev.vsk.ru
                            grpc:
                              type: object
                              properties:
                                url:
                                  type: string
                                  example: https://test.dshtest9.apps.okd-lan.pdev.vsk.ru
                            openapi:
                              type: object
                              properties:
                                url:
                                  type: string
                                  example: https://test.dshtest10.apps.okd-lan.pdev.vsk.ru
                            ui:
                              type: object
                              properties:
                                url:
                                  type: string
                                  example: https://test.dshtest11.apps.okd-lan.pdev.vsk.ru
                        deploymentUuid:
                          type: string
                          format: uuid
                          example: ad7a8622-4cd9-4d
                        environmentCode:
                          type: string
                          enum:
                           - dev
                           - test
                           - stage
                           - prod
                        name:
                          type: string
                        templateUuid:
                          type: string
                          format: uuid
                          example: 824dc3ef-67f9-4c
                        type:
                          type: string
                          example: marlin
                        uuid:
                          type: string
                          format: uuid
                          example: a84c333b-b1ff-46d7-aa5e-640f241b0913
                        version:
                          type: string
                          example: 3e5db628-2000-4d
                    useMapping:
                      type: boolean
            number: 
              type: integer
              example: 1
            runtimeEnvironment:
              type: string
              example: OpenShift
            status:
              type: string
              example: pending
              enum:
                - pending
                - running
                - deleting
                - deleted
                - failed
                - failed_to_stop
                - failed_to_deploy
                - failed_to_delete
                - failed_to_process
                - process_operation
                - success
                - stopped
                - stopping
            updatedAt:
              type: string
              pattern: yyyy-MM-dd'T'HH:mm:ss.SSSZ
              example: 2021-05-31T16:01:33.250Z
            validity:
              type: boolean
        id:
          type: string
          format: uuid
          example: e77a0546-f881-44f6-a427-61be96c567e3
        relationships: 
          type: object
          properties:
            build:
              type: object
              properties: 
                data:
                  $ref: '#/components/schemas/relationship'
            checks:
              type: object
              properties:
                data:
                  type: array
                  items:
                    $ref: '#/components/schemas/relationship'
            environment:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/relationship'
            processingErrors:
              type: object
              properties:
                data:
                  type: array
                  items:
                    $ref: '#/components/schemas/relationship'
            service:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/relationship'
            template:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/relationship'
            user:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/relationship'  
        type: 
          type: string
          default: deployments
          
    businessProcesses:
      title: businessProcesses
      type: object
      properties:
        attributes:
          type: object
          properties:
            availableActions:
              type: array
              items:
                type: string
            availableStates:
              type: object
              properties:
                code:
                  type: string
                  example: testproc
                containerTypeId:
                  type: string
                  example: 810c5dc6-338b-49b3-92d6-d6d53d810878                 
            description:
                type: string
                example: opisanie
            name:
                type: string
                example: swaswa
            serviceId:
                type: string
                example: 2950090a-8b7e-4f3c-a241-e1b6e137797e
        id:
          type: string
          example: e0001be5-ef6a-424c-82fd-0ba025591b28
        relationships:
            type: object
            properties: 
              containerType:
                  type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/relationship'
              service:  
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/relationship'                      
        type: 
          type: string
          example: businessProcesses
    releases:
      title: releases
      type: object
      properties:
        attributes:
          type: object
          properties:
            closed:
              type: boolean
            comment:
              type: string
            createdAt: 
              type: string
              pattern: yyyy-MM-dd'T'HH:mm:ss.SSSZ
              example: 2022-02-25T12:45:43.350Z
            currentBuildId:
              type: string
              format: uuid
              example: ef9e0be3-4058-4735-8a47-db01e64325f2
            description:
              type: string
            releaseDate:
              type: string
              pattern: yyyy-MM-dd'T'HH:mm:ss.SSSZ
              example: 2022-02-25T12:45:43.350Z
            transferProtocolUrl:
              type: string
            updatedAt:
              type: string
              pattern: yyyy-MM-dd'T'HH:mm:ss.SSSZ
              example: 2022-02-25T12:45:43.350Z
            version:
              type: string
              example: 2.4.0.0
        id:
          type: string
          example: f8010654-ddf3-4b15-93d5-d0022147fc63
        relationships: 
          type: object
          properties:
            builds:
              type: object
              properties:
                data:
                  type: array
                  items:
                    $ref: '#/components/schemas/relationship'
            businessProcessVersions:
              type: object
              properties:
                data:
                  type: array
                  items:
                    $ref: '#/components/schemas/relationship'
            checks:
              type: object
              properties:
                data:
                  type: array
                  items:
                    $ref: '#/components/schemas/relationship'
            dependencies:
              type: object
              properties:
                data:
                  type: array
                  items:
                    $ref: '#/components/schemas/relationship'
            enviroment:
              type: object
              properties: 
                data:
                  $ref: '#/components/schemas/relationship'
            environmentInfos:
              type: object
              properties:
                data:
                  type: array
                  items:
                    $ref: '#/components/schemas/relationship'
            service:
              type: object
              properties: 
                data:
                  $ref: '#/components/schemas/relationship'
            step:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/relationship'
        type: 
          type: string
          default: releases

    releaseStep:
      title: releaseStep
      type: object
      properties:
        attributes:
          type: object
          properties:
            name:
              type: string
              example: ready_to_build
        id:
          type: string
          format: uuid
          example: 3414dc46-8400-4682-b583-f37442592787
        relationships:
          type: object
          properties:
            release:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/relationship'
        type:
          type: string
          default: releaseStep

    services:
      title: services
      type: object
      properties:
        attributes:
          type: object
          properties:
            code:
              type: string
              example: dshtest
            confluenceUrl:
              type: string
            createdAt:
              type: string
              pattern: yyyy-MM-dd'T'HH:mm:ss.SSSZ
              example: 2022-02-21T08:20:36.101Z
            description:
              type: string
            gitlabApiUrl:
              type: string
              example: https://mln-git-pd1.pdev.vsk.ru/api1/test/dshtest.git
            gitlabCodeUrl:
              type: string
              example: https://mln-git-pd1.pdev.vsk.ru/code/test/dshtest.git
            gitlabProcessUrl:
              type: string
              example: https://mln-git-pd1.pdev.vsk.ru/process/test/dshtest.git
            iconUrl:
              type: string
            jiraCmdb:
              type: string
            latestApiVersion:
              type: string
              example: 8.8
            name:
              type: string
              example: dsh-t
            ownerFullName:
              type: string
              example: portal_admin portal_admin 
            projectName:
              type: string
              example: test
            releaseDate:
              type: string
              pattern: yyyy-MM-dd'T'HH:mm:ss.SSSZ
            shortDescription:
              type: string
            status:
              type: string
              example: new_service
            updatedAt:
                type: string
                pattern: yyyy-MM-dd'T'HH:mm:ss.SSSZ
                example: 2022-02-21T08:20:36.101Z
            url:
              type: string
        id:
          type: string
          format: uuid
          example: a84c333b-b1ff-46d7-aa5e-640f241b0913
        relationships:
          type: object
          properties:
            acceleratorPack:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/relationship'
            builds:
              type: object
              properties:
                data:
                  type: array
                  items:
                    $ref: '#/components/schemas/relationship'
            dependencies:
              type: object
              properties:
                data:
                  type: array
                  items:
                    type: object
            dependentServices:
              type: object
              properties:
                data:
                  type: array
                  items:
                    type: object
            incomingSubscriptions:
              type: object
              properties:
                data:
                  type: array
                  items:
                    type: object
            integrations:
              type: object
              properties:
                data:
                  type: array
                  items:
                    $ref: '#/components/schemas/relationship'
            kind:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/relationship'
            mockServices:
              type: object
              properties:
                data:
                  type: array
                  items:
                    type: object
            mockedService:
              type: object
              properties:
                data:
                  type: string
            outgoingSubscriptions:
              type: object
              properties:
                data:
                  type: array
                  items:
                    type: object
            processingErrors:
              type: object
              properties:
                data:
                  type: array
                  items:
                    type: object
            project:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/relationship'
            releases:
              type: object
              properties:
                data:
                  type: array
                  items:
                    $ref: '#/components/schemas/relationship'
            templates:
              type: object
              properties:
                data:
                  type: array
                  items:
                    $ref: '#/components/schemas/relationship'
        type:
          type: string
          default: services

    project:
      title: project
      type: object
      properties:
        attributes:
          type: object
          properties:
            businessOwner:
              type: string
            code:
              type: string
              example: test_app_one
            confluenceUrl:
              type: string
            createdAt:
              type: string
              pattern: yyyy-MM-dd'T'HH:mm:ss.SSSZ
              example: 2021-06-02T15:15:53.134Z
            description:
              type: string
            gitlabApiUrl:
              type: string
              example: https://mln-git-pd1.pdev.vsk.ru/groups/api1/test_app_one
            gitlabCodeUrl:
              type: string
              example: https://mln-git-pd1.pdev.vsk.ru/groups/code/test_app_one
            gitlabProcessUrl:
              type: string
              example: https://mln-git-pd1.pdev.vsk.ru/groups/process/test_app_one
            iconUrl:
              type: string
            jiraCmdb:
              type: string
            jiraUrl:
              type: string
              example: https://jira.phoenixit.ru/browse/MARLIN/?selectedTab=com.atlassian.jira.jira-projects-plugin:summary-panel
            kind:
              type: string
              example: marlin
            name:
              type: string
              example: Test App 1 
            options:
              type: object
            updatedAt:
                type: string
                pattern: yyyy-MM-dd'T'HH:mm:ss.SSSZ
                example: 2022-03-02T11:16:11.065Z
            url:
              type: string
        id:
          type: string
          format: uuid
          example: eff26064-4117-4d84-bbba-3b3c89fd2bb2
        relationships:
          type: object
          properties:
            incomingSubscriptions:
              type: object
              properties:
                data:
                  type: array
                  items:
                    $ref: '#/components/schemas/relationship'
            integrations:
              type: object
              properties:
                data:
                  type: array
                  items:
                    $ref: '#/components/schemas/relationship'
            members:
              type: object
              properties:
                data:
                  type: array
                  items:
                    $ref: '#/components/schemas/relationship'
            outgoingSubscriptions:
              type: object
              properties:
                data:
                  type: array
                  items:
                    $ref: '#/components/schemas/relationship'
            paasSubscriptions:
              type: object
              properties:
                data:
                  type: array
                  items:
                    $ref: '#/components/schemas/relationship'
            services:
              type: object
              properties:
                data:
                  type: array
                  items:
                    $ref: '#/components/schemas/relationship'
            users:
              type: object
              properties:
                data:
                  type: array
                  items:
                    $ref: '#/components/schemas/relationship'
        type:
          type: string
          default: projects
          
    templates:
      title: templates
      type: object
      properties:
        attributes:
          type: object
          properties:
            active:
              type: boolean
            busy:
              type: boolean
            createdAt:
              type: string
              pattern: yyyy-MM-dd'T'HH:mm:ss.SSSZ
              example: 2022-03-03T20:32:55.480Z
            deletingSecretsFailed:
              type: boolean
            description:
              type: string
            name:
              type: string
              example: demoartimigratenode-tets
            params:
              type: array
              items:
                type: object
            transferringSecrets:
              type: string
            updatedAt:
                type: string
                pattern: yyyy-MM-dd'T'HH:mm:ss.SSSZ
                example: 2022-03-04T11:06:29.329Z
            useMapping:
              type: boolean
            validity:
              type: boolean
        id:
          type: string
          format: uuid
          example: 52d83fbe-2bc2-4809-87cb-623a95ea5ab1
        relationships:
          type: object
          properties:
            addresses:
              type: object
              properties:
                data:
                  type: array
                  items:
                    $ref: '#/components/schemas/relationship'
            businessProcessVersionDeployment:
              type: object
              properties:
                data:
                  type: object
            deployment:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/relationship'
            dynamicParameters:
              type: object
              properties:
                data:
                  type: array
                  items:
                    type: object
            environment:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/relationship'
            environmentVariableMappings:
              type: object
              properties:
                data:
                  type: array
                  items:
                    type: object 
            environmentVariables:
              type: object
              properties:
                data:
                  type: array
                  items:
                    type: object 
            fileMappings:
              type: object
              properties:
                data:
                  type: array
                  items:
                    type: object 
            platformServiceDeployments:
              type: object
              properties:
                data:
                  type: array
                  items:
                    $ref: '#/components/schemas/relationship'
            processingErrors:
              type: object
              properties:
                data:
                  type: array
                  items:
                    type: object 
            service:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/relationship'
            templatePlatformServiceDeployments:
              type: object
              properties:
                data:
                  type: array
                  items:
                    $ref: '#/components/schemas/relationship'
        type:
          type: string
          default: templates

    check_validity:
      title: repositories
      type: object
      properties:
        allowdeployment: 
          type: boolean
          example: false
        hint: 
          type: string
          example: Для создания развертывания dsh-t необходимо указать ссылки на шаблоны в блоке <b>Шаблоны подписок</b> или внести значения в блок <b>Параметры</b>.
        operations:
          type: array
          items: 
            type: object        
          
    environments:
      title: environments
      type: object
      properties:
        attributes:
          type: object
          properties:
            code:
              type: string
              enum:
                - dev
                - test
                - stage
                - prod
            color:
              type: string
              example: #ef8231
            createdAt:
              type: string
              pattern: yyyy-MM-dd'T'HH:mm:ss.SSSZ
              example: 2021-05-31T16:01:33.273Z
            description:
              type: string
              enum:
                - Среда разработки
                - Среда тестирования
                - Среда интеграционного тестирования
                - Среда эксплуатации
            groups:
              type: array
              items:
                type: string
                enum:
                  - developer
                  - user
                  - admin
            hidden:
              type: boolean
            name:
              type: string
              enum:
                - Среда разработки
                - Среда тестирования
                - Среда интеграционного тестирования
                - Среда эксплуатации
            order:
              type: string
              example: 1
            skipBuild:
              type: boolean
            skipMaintenance:
              type: boolean
            updatedAt:
                type: string
                pattern: yyyy-MM-dd'T'HH:mm:ss.SSSZ
                example: 2022-03-04T11:06:29.329Z
        id:
          type: string
          format: uuid
          example: 22dbd161-a5c7-48cf-9d7c-4d21eb80d86c
        relationships:
          type: object
          properties:
            systemComponentExemplars:
              type: object
              properties:
                data:
                  type: array
                  items:
                    $ref: '#/components/schemas/relationship'
        type:
          type: string
          default: environments
          
    templateAddresses:
      title: templateAddresses
      type: object
      properties:
        attributes:
          type: object
          properties:
            code:
              type: string
            fullUrl:
              type: string
              example: https://test.demoartimigratenode1.apps.okd-lan.pdev.vsk.ru
            name:
              type: string
            urlPart:
              type: string
              example: demoartimigratenode1
        id:
          type: string
          format: uuid
          example: d3540f9f-ec17-4c19-ab0a-8cecc88ed929
        relationships:
          type: object
          properties:
            template:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/relationship'
        type:
          type: string
          default: templateAddresses
          
    serviceKinds:
      title: serviceKinds
      type: object
      properties:
        attributes:
          type: object
          properties:
            code:
              type: string
              example: legacy
            defaultBusinessProcessPipelinePath:
              type: string
            defaultServicePipelinePath:
              type: string
            description:
              type: string
            name:
              type: string
        id:
          type: string
          format: uuid
          example: fa679aca-ef3c-41f4-9fc1-f9821d75ece6
        relationships:
          type: object
          properties:
            addresses:
              type: object
              properties:
                data:
                  type: array
                  items:
                    $ref: '#/components/schemas/relationship'
            pipelineValidations:
              type: object
              properties:
                data:
                  type: array
                  items:
                    $ref: '#/components/schemas/relationship'
            pipelines:
              type: object
              properties:
                data:
                  type: array
                  items:
                    $ref: '#/components/schemas/relationship'
            services:
              type: object
              properties:
                data:
                  type: array
                  items:
                    $ref: '#/components/schemas/relationship'
        type:
          type: string
          default: serviceKinds

    platformServices:
      title: platformServices
      type: object
      properties:
        attributes:
          type: object
          properties:
            code:
              type: string
              example: minio
            confluenceUrl:
              type: string
            createdAt:
              type: string
              pattern: yyyy-MM-dd'T'HH:mm:ss.SSSZ
              example: 2021-06-03T09:21:45.392Z
            description:
              type: string
            iconUrl:
              type: string
            name:
              type: string
              example: MinIO
            runtime:
              type: boolean
            updatedAt:
              type: string
              pattern: yyyy-MM-dd'T'HH:mm:ss.SSSZ
              example: 2021-06-03T09:21:45.392Z
        id:
          type: string
          format: uuid
          example: 1ffca188-14ea-4c08-a6a9-5af0d6008abf
        relationships:
          type: object
          properties:
            integrations:
              type: object
              properties:
                data:
                  type: array
                  items:
                    $ref: '#/components/schemas/relationship'
            paasSubscriptions:
              type: object
              properties:
                data:
                  type: array
                  items:
                    $ref: '#/components/schemas/relationship'
            services:
              type: object
              properties:
                data:
                  type: array
                  items:
                    $ref: '#/components/schemas/relationship'
            systemComponent:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/relationship'
            systemComponentExemplars:
              type: object
              properties:
                data:
                  type: array
                  items:
                    $ref: '#/components/schemas/relationship'
        type:
          type: string
          default: platformServices
          
    systemComponents:
      title: systemComponents
      type: object
      properties:
        attributes:
          type: object
          properties:
            characteristic:
              type: string
              example: paas
            code:
              type: string
              example: minio
            description:
              type: string
            properties:
              type: array
              items:
                type: object
                properties:
                  hint:
                    type: string
                    example: Ссылка на web-интерфейс MiniO
                  label:
                    type: string
                    example: Ссылка
                  name:
                    type: string
                    example: url
                  placeholder:
                    type: string
                    example: Введите ссылку на интерфейс MiniO
                  secret:
                    type: boolean
                  type:
                    type: string
                    example: url
                  value:
                    type: string
                    example: http://127.0.0.1
            title:
              type: string
              example: MiniO
            version:
              type: string
              example: 2
        id:
          type: string
          format: uuid
          example: 6849aea2-be90-4c08-b872-8d3fe8cc1f31
        relationships:
          type: object
          properties:
            platformServiceKind:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/relationship'
        type:
          type: string
          default: systemComponents
    systemComponentsExemplars:
      title: systemComponentsExemplars
      type: object
      properties:
        attributes:
          type: object
          properties:
            code: 
              type: string
              example: confluence
            enabled:
              type: string
              example: true
            envirometId:
              type: string
            name:
              type: string
              example: Confluence
            original:
              type: string
              example: true
        properties:
          type: array
          items:
            type: object
            properties:
              hint:
                type: string
                example: Ссылка на web-интерфейс Confluence           
              label:
                type: string
                example: Ссылка
              name:
                type: string
                example: url                 
              placeholder:
                type: string
                example: Введите ссылку на интерфейс Confluence                   
              secret:
                type: string
                example: false                   
              type:
                type: string
                example: url        
              value:
                type: string
                example: https://127.0.0.1   
              systemComponentId:
                type: string
                example: 51b005bc-1f8d-4aba-9bb0-127b27d1a4a4
        id:
          type: string
          example: 00c7fc24-03a8-4339-a03d-5fd8b8ddc93f
        relationships: 
          type: object
          properties:
            enviroment:
              type: object
              properties: 
                data:
                  type: object
            systemComponent:
              type: object
              properties:
                data: 
                  $ref: '#/components/schemas/relationship'
        type:
          type: string
          example: systemComponentsExemplars        
          
    integrations:
      title: integrations
      type: object
      properties:
        attributes:
          type: object
          properties:
            createdAt:
              type: string
              pattern: yyyy-MM-dd'T'HH:mm:ss.SSSZ
              example: 2022-03-29T08:20:23.781Z
            environmentCode:
              type: string
              enum:
                - dev
                - test
                - stage
                - prod
            kind:
              type: string
              example: jenkins
            options:
              type: object
              properties:
                changePasswordJobName:
                  type: string
                  example: minio_changePassword
                changePasswordWebUrl:
                  type: string
                  example: http://mln-jenkins.pdev.vsk.ru/job/minio_changePassword
                createUserJobName:
                  type: string
                  example: minio_createUser
                createUserWebUrl:
                  type: string
                  example: http://mln-jenkins.pdev.vsk.ru/job/minio_createUser
                deleteUserJobName:
                  type: string
                  example: minio_deleteUser
                deleteUserWebUrl:
                  type: string
                  example: http://mln-jenkins.pdev.vsk.ru/job/minio_deleteUser
                deployJobName:
                  type: string
                  example: minio_deploy
                deployWebUrl:
                  type: string
                  example: http://mln-jenkins.pdev.vsk.ru/job/minio_deploy
                undeployJobName:
                  type: string
                  example: minio_undeploy
                undeployWebUrl:
                  type: string
                  example: http://mln-jenkins.pdev.vsk.ru/job/minio_undeploy
            status:
              type: string
              example: success
            updatedAt:
              type: string
              pattern: yyyy-MM-dd'T'HH:mm:ss.SSSZ
              example: 2022-03-29T08:20:23.781Z
        id:
          type: string
          format: uuid
          example: 38991d06-1747-46ca-93b9-21e84e9767c3
        relationships:
          type: object
          properties:
            environment:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/relationship'
            integrable:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/relationship'
            processingErrors:
              type: object
              properties:
                data:
                  type: array
                  items:
                    type: object
        type:
          type: string
          default: integrations

    platformServiceDeployments:
      title: platformServiceDeployments
      type: object
      properties:
        attributes:
          type: object
          properties:
            createdAt:
              type: string
              pattern: yyyy-MM-dd'T'HH:mm:ss.SSSZ
              example: 2022-03-29T08:20:23.781Z
            externalAccessAccount:
              type: string
            externalAccessParams:
              type: string
            hasJenkinsLog:
              type: boolean
            name:
              type: string
              example: prod_1_openshift_okd_lan
            number:
              type: string
            status:
              type: string
              example: success
            updatedAt:
              type: string
              pattern: yyyy-MM-dd'T'HH:mm:ss.SSSZ
              example: 2022-03-29T08:20:23.781Z
        id:
          type: string
          format: uuid
          example: 5111ad16-a037-4eca-99eb-8d2d6054fef6
        relationships:
          type: object
          properties:
            environment:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/relationship'
            templatePlatformServiceDeployments:
              type: object
              properties:
                data:
                  type: array
                  items:
                    $ref: '#/components/schemas/relationship'
        type:
          type: string
          default: platformServiceDeployments

    subscriptions:
      title: subscriptions
      type: object
      properties:
        attributes:
          type: object
          properties:
            createdAt:
              type: string
              pattern: yyyy-MM-dd'T'HH:mm:ss.SSSZ
              example: 2022-03-29T08:20:23.781Z
            initiatorId:
              type: string
              format: uuid
              example: a84c333b-b1ff-46d7-aa5e-640f241b0913
            receiverId:
              type: string
              format: uuid
              example: d6c683c8-84a8-48bd-b30a-8183000543cc
            status:
              type: string
              example: confirmed
              enum:
                - pending
                - confirmed
                - declined
            subscriptionType:
              type: string
            updatedAt:
              type: string
              pattern: yyyy-MM-dd'T'HH:mm:ss.SSSZ
              example: 2022-03-29T08:20:23.781Z
        id:
          type: string
          format: uuid
          example: 5250b4b3-0c5a-4722-ab7f-55059e8a887c
        relationships:
          type: object
          properties:
            accesses:
              type: object
              properties:
                data:
                  type: array
                  items:
                    $ref: '#/components/schemas/relationship'
            initiator:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/relationship'
            receiver:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/relationship'
        type:
          type: string
          default: subscriptions

    paasSubscriptions:
      title: paasSubscriptions
      type: object
      properties:
        attributes:
          type: object
          properties:
            additionalParams:
              type: string
            createdAt:
              type: string
              pattern: yyyy-MM-dd'T'HH:mm:ss.SSSZ
              example: 2022-03-29T08:20:23.781Z
            parameters:
              type: object
              properties:
                passwordParamName:
                  type: string
                  example: jdbc.password
                urlParamName:
                  type: string
                  example: jdbc.url
                userParamName:
                  type: string
                  example: jdbc.user
            updatedAt:
              type: string
              pattern: yyyy-MM-dd'T'HH:mm:ss.SSSZ
              example: 2022-03-29T08:20:23.781Z
        id:
          type: string
          format: uuid
          example: 269c5a68-d2db-4c68-9420-1297d793b5e0
        relationships:
          type: object
          properties:
            deployments:
              type: object
              properties:
                data:
                  type: array
                  items:
                    $ref: '#/components/schemas/relationship'
            platformService:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/relationship'
            service:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/relationship'
        type:
          type: string
          default: paasSubscriptions

    acceleratorPacks:
      title: acceleratorPacks
      type: object
      properties:
        attributes:
          type: object
          properties:
            active:
              type: boolean
            code:
              type: string
              example: JAVA11
            description:
              type: string
            inDeveloping:
              type: boolean
            name:
              type: string
              example: JAVA11
        id:
          type: string
          format: uuid
          example: ea3929d1-038d-44d7-aab7-6ad0d3a2e2cb
        relationships:
          type: object
          properties:
            integrations:
              type: object
              properties:
                data:
                  type: array
                  items:
                    $ref: '#/components/schemas/relationship'
            kinds:
              type: object
              properties:
                data:
                  type: array
                  items:
                    $ref: '#/components/schemas/relationship'
            services:
              type: object
              properties:
                data:
                  type: array
                  items:
                    $ref: '#/components/schemas/relationship'
        type:
          type: string
          default: acceleratorPacks
            
    pipelineValidations:
      title: pipelineValidations
      type: object
      properties:
        attributes:
          type: object
          properties:
            code:
              type: string
              example: build
            mandatory:
              type: boolean
            name:
              type: string
              example: Build
            targetType:
              type: string
              example: builds
        id:
          type: string
          format: uuid
          example: ea3929d1-038d-44d7-aab7-6ad0d3a2e2cb
        relationships:
          type: object
          properties:
            kind:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/relationship'
        type:
          type: string
          default: pipelineValidations

    builds:
      title: builds
      type: object
      properties:
        attributes:
          type: object
          properties:
            commit:
              type: string
              example: master
            createdAt:
              type: string
              pattern: yyyy-MM-dd'T'HH:mm:ss.SSSZ
              example: 2022-04-06T09:31:07.551Z
            description:
              type: string
            environmentCode:
              type: string
              enum:
                - dev
                - test
                - stage
                - prod
            hasJenkinsLog:
              type: boolean
            qualityProtocolUrl:
              type: string
            serviceId:
              type: string
              format: uuid
              example: a84c333b-b1ff-46d7-aa5e-640f241b0913
            status:
              type: string
              example: pending,running,success,stopping,failed_to_stop,stopped
            title:
              type:  string
            updatedAt:
              type: string
              pattern: yyyy-MM-dd'T'HH:mm:ss.SSSZ
              example: 2022-04-06T09:31:07.551Z
        id:
          type: string
          format: uuid
          example: acb1d28e-af7f-47a9-9a6b-43f8e5ca8b4d
        relationships:
          type: object
          properties:
            checks:
              type: object
              properties:
                data:
                  type: array
                  items:
                    $ref: '#/components/schemas/relationship'
            deployments:
              type: object
              properties:
                data:
                  type: array
                  items:
                    $ref: '#/components/schemas/relationship'
            environment:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/relationship'
            release:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/relationship'
            service:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/relationship'
            user:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/relationship'
        type:
          type: string
          default: builds

    checks:
      title: checks
      type: object
      properties:
        attributes:
          type: object
          properties:
            active:
              type: boolean
            code:
              type: string
              example: build
            mandatory:
              type: boolean
            name:
              type: string
              example: Build
            status:
              type: string
              example: pending,running,success,stopping,failed_to_stop,stopped
        id:
          type: string
          format: uuid
          example: a246aacb-2c32-4cc7-85fe-decab8b131d4
        relationships:
          type: object
          properties:
            subject:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/relationship'
        type:
          type: string
          default: checks
    repositories:
      title: repositories
      type: object
      properties:
        attributes:
          type: object
          properties:
            code: 
              type: string
              example: confluence
            createdAt:
              type: string
              pattern: yyyy-MM-dd'T'HH:mm:ss.SSSZ
              example: 2021-05-31T16:01:33.386Z
            name:
              type: string
              example: Docker
            urlTemplate:
              type: string
              example: 
            urlWhiteList:
              type: string
        id:
          type: string
          example: 77cdb6be-f04e-43b4-a328-2710f8e4f634
        type:
          type: string
          example: nexusRepositories      
          
    users:
      title: users
      type: object
      properties:
        attributes:
          type: object
          properties:
            approved:
              type: boolean
            createdAt:
              type: string
              pattern: yyyy-MM-dd'T'HH:mm:ss.SSSZ
              example: 2021-06-16T05:13:43.945Z
            email:
              type: string
              example: developer@pdev.vsk.ru
            environments:
              type: array
              items:
                type: string
                format: uuid
                example: 744ef863-5b1e-4d9d-829a-085d7ad17a8a
            firstName:
              type: string
              example: developer
            fullName:
              type: string
              example: developer developer 
            lastName:
              type: string
              example: developer
            lastSignIn:
              type: string
              pattern: yyyy-MM-dd'T'HH:mm:ss.SSSZ
              example: 2022-04-26T13:34:56.126Z
            middleName:
              type: string
            phone:
              type: string
            projects:
              type: array
              items:
                type: string
                format: uuid
                example: eff26064-4117-4d84-bbba-3b3c89fd2bb2
            roles:
              type: array
              items:
                type: string
                example: exploitation
        id:
          type: string
          example: 17
        relationships:
          type: object
          properties:
            members:
              type: object
              properties:
                data:
                  type: array
                  items:
                    $ref: '#/components/schemas/relationship'
        type:
          type: string
          default: users
    relationship:
      title: relationship
      type: object
      properties: 
        id:
          type: string
          format: uuid
          example: 1c2ed47f-fd4c-4e52-ac91-6a1f0ae57057
        type: 
          type: string
          example: members
          enum:
            - acceleratorPacks
            - businessProcessContainerTypes
            - builds
            - checks
            - environments
            - integrations
            - members
            - platformServiceKinds
            - projects
            - releases
            - subscriptions
            - serviceKindPipelines
            - serviceKinds
            - services
            - services.name
            - systemComponentsExemplars
            - templateAddresses
            - templates
            - users
    templatePlatformServiceDeployments:
      title: TemplatePlatformServiceDeployments
      type: object
      properties:
        attributes:
          type: object
          properties:
            options:
              type: object
        id:
          type: string
          example: 17
        relationships:
          type: object
          properties:
            platformServiceDeployments:
              type: object
              properties:
                data:
                  type: array
                  items:
                    $ref: '#/components/schemas/relationship'
            serviceTemplate:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/relationship'
        type:
          type: string
          default: templatePlatformServiceDeployments
    component:
      title: ComponentsAndSoftware
      type: object
      properties:
        component:
          type: string
          example: jenkins
        enviroment:
          type: string
          example: dev
        environmentColor:
          type: string
          example: 65b6e6
        environmentOrder:
          type: string
          example: 2
        name: 
          type: string
          example: Jenkins
        status:
          type: string
          example: available
        url:
          type: string
          example: http://mln-jenkins.pdev.vsk.ru
    processingErrors:
      title: proccessingErrors
      type: object
      properties:
        attributes:
          type: object
          properties:
            backtrace:
              type: array
              items:
                type: string
                example: [\"/bundle/ruby/2.7.0/gems/json-2.5.1/lib/json/common.rb:216:in `parse'\", \"/bundle/ruby/2.7.0/gems/json-2.5.1/lib/json/common.rb:216:in `parse'\"]
            createdAt:
              type: string
              pattern: yyyy-MM-dd'T'HH:mm:ss.SSSZ
              example: 2022-03-29T08:20:23.781Z
            message:
              type: string
              example: Не удалось найти/создать пространство в Confluence:809:unexpected token at
            options:
              type: object
              properties:
                createdAt:
                  type: string
                  pattern: yyyy-MM-dd'T'HH:mm:ss.SSSZ
                  example: 2022-03-29T08:20:23.781Z
                environmentId:
                  type: string
                id:
                  type: string
                  example: f6069e5a-230d-49d6-a6b5-b1a230c8445d
                integrableId:
                  type: string
                  example: dcb615fa-7190-4cf5-9fe0-099f3fd61c75"
                integrableType: 
                  type: string
                  example: Project
                kind:
                  type: string
                  example: confluence
                options:
                  type: object
                status:
                  type: string
                  example: failed
                updatedAt:
                  type: string
                  pattern: yyyy-MM-dd'T'HH:mm:ss.SSSZ
                  example: 2021-12-15T12:28:29.355Z
        id:
          type: string
          example: dd617e7c-b7cd-4faf-8be8-73a7da6236fc"
        relationships:
          type: object
          properties:
            subject:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/relationship'
        type:
          type: string
          default: processingErrors
    
    versions:
      title: versions
      type: object
      properties:
        attributes:
          type: object
          properties:
            businessProcessId:
              type: string
              format: uuid
              example: a5d1c359-5c97-4888-891f-12c9a0fbc1e1
            commitXml:
              type: string
            createdAt:
              type: string
              pattern: yyyy-MM-dd'T'HH:mm:ss.SSSZ
              example: 2021-12-15T12:28:29.355Z
            description:
              type: string
            releaseId:
              type: string
              format: uuid
              example: 37afd846-087d-4e16-8051-91a6d4b85ffd
            status:
              type: integer
            updatedAt:
              type: string
              pattern: yyyy-MM-dd'T'HH:mm:ss.SSSZ
              example: 2021-12-15T12:28:29.355Z
            version:
              type: string
              example: 1.1.1.1
        id:
          type: string
          format: uuid
          example: c32efcab-a31c-494e-8e35-dfacb25ec45d
        relationships:
          type: object
          properties:
            businessProcess:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/relationship'
            deployments:
              type: object
              properties:
                data:
                  type: array
                  items:
                    $ref: '#/components/schemas/relationship'
            release:
              type: object
              properties:
                businessProcess:
                  type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/relationship'
        type:
          type: string
          default: versions
